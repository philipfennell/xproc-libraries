<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="thesaurus.css" type="text/css" charset="UTF-8"?>
<XML>
<TITLE> </TITLE><Heading-1>
<A ID="pgfId-1044036"></A>
<A ID="64032"></A>
Using the Thesaurus Functions</Heading-1>
<pagenum>
<A ID="pgfId-1045236"></A>
163</pagenum>
<Body>
<A ID="pgfId-1044037"></A>
MarkLogic Server includes functions that enable applications to provide thesaurus capabilities. Thesaurus applications use thesaurus (synonym) documents to find words with similar meaning to the words entered by a user. A common example application expands a user search to include words with similar meaning to those entered in a search. For example, if the application uses a thesaurus document that lists car brands as synonyms for the word <Emphasis>
car</Emphasis>
, then a search for car might return results for <Emphasis>
Alfa&#160;Romeo</Emphasis>
, <Emphasis>
Ford</Emphasis>
, and <Emphasis>
Hyundai</Emphasis>
, as well as for the word <Emphasis>
car</Emphasis>
. </Body>
<Body>
<A ID="pgfId-1044038"></A>
This chapter describes how to use the thesaurus functions and contains the following sections:</Body>
<Body-bullet>
<A ID="pgfId-1044042"></A>
<A href="thesaurus.xml#id(35716)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
The Thesaurus Module</Hyperlink>
</A></Body-bullet>
<Body-bullet>
<A ID="pgfId-1044046"></A>
<A href="thesaurus.xml#id(15383)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Function Reference</Hyperlink>
</A></Body-bullet>
<Body-bullet>
<A ID="pgfId-1044050"></A>
<A href="thesaurus.xml#id(15286)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Thesaurus Schema</Hyperlink>
</A></Body-bullet>
<Body-bullet>
<A ID="pgfId-1044054"></A>
<A href="thesaurus.xml#id(95787)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Capitalization</Hyperlink>
</A></Body-bullet>
<Body-bullet>
<A ID="pgfId-1044058"></A>
<A href="thesaurus.xml#id(22906)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Managing Thesaurus Documents</Hyperlink>
</A></Body-bullet>
<Body-bullet>
<A ID="pgfId-1044062"></A>
<A href="thesaurus.xml#id(28692)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Expanding Searches Using a Thesaurus</Hyperlink>
</A></Body-bullet>
<Heading-2>
<A ID="pgfId-1044064"></A>
<A ID="35716"></A>
The Thesaurus Module</Heading-2>
<Body>
<A ID="pgfId-1044065"></A>
The thesaurus functions are installed into the following XQuery module file:</Body>
<Body-bullet>
<A ID="pgfId-1044066"></A>
<Emphasis>
install_dir</Emphasis>
<code>
/</code>
Modules/MarkLogic/thesaurus.xqy</Body-bullet>
<Body>
<A ID="pgfId-1044067"></A>
where <Emphasis>
install_dir</Emphasis>
 is the directory in which MarkLogic Server is installed. The functions in the thesaurus module use the <code>
thsr:</code>
 namespace prefix, which you must specify in your XQuery program (or specify your own namespace). To use any of the functions, include the module and namespace declaration in the prolog of your XQuery program as follows:</Body>
<CodeLeft>
<A ID="pgfId-1044068"></A>
import module namespace thsr=&quot;http://marklogic.com/xdmp/thesaurus&quot; 
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;at &quot;/MarkLogic/thesaurus.xqy&quot;;</CodeLeft>
<Heading-2>
<A ID="pgfId-1044070"></A>
<A ID="15383"></A>
Function Reference</Heading-2>
<Body>
<A ID="pgfId-1044073"></A>
The reference information for the thesaurus module functions is included in the <Emphasis>
MarkLogic XQuery and XSLT Function Reference</Emphasis>
 available through <Hyperlink>
<A href="http://developer.marklogic.com" xml:link="simple" show="replace" actuate="user" CLASS="URL">developer.marklogic.com</A></Hyperlink>
.</Body>
<Heading-2>
<A ID="pgfId-1044077"></A>
<A ID="15286"></A>
Thesaurus Schema</Heading-2>
<Body>
<A ID="pgfId-1044078"></A>
Any thesaurus documents loaded into MarkLogic Server must conform to the thesaurus schema, installed into the following file:</Body>
<Body-bullet>
<A ID="pgfId-1044079"></A>
<Emphasis>
install_dir</Emphasis>
<code>
/Config/thesaurus.xsd</code>
</Body-bullet>
<Body>
<A ID="pgfId-1044080"></A>
where <Emphasis>
install_dir</Emphasis>
 is the directory in which MarkLogic Server is installed. </Body>
<Heading-2>
<A ID="pgfId-1044082"></A>
<A ID="95787"></A>
Capitalization</Heading-2>
<Body>
<A ID="pgfId-1044083"></A>
Thesaurus documents and the thesaurus functions are case-sensitive. Therefore, a thesaurus term for <Emphasis>
Car</Emphasis>
 is different from a thesaurus term for <Emphasis>
car</Emphasis>
 and any lookups for these terms are case-sensitive. </Body>
<Body>
<A ID="pgfId-1044084"></A>
If you want your applications to be case-insensitive (that is, if you want the term <Emphasis>
Car</Emphasis>
 to return thesaurus entries for both <Emphasis>
Car</Emphasis>
 and <Emphasis>
car</Emphasis>
), your application must handle the case of the terms you want to lookup. There are several ways to handle case. For example, you can lowercase all the entries in your thesaurus documents and then lowercase the terms before performing the lookup from the thesaurus. For an example of lowercasing terms in a thesaurus document, see <A href="thesaurus.xml#id(65318)" xml:link="simple" show="replace" actuate="user" CLASS="XRef">'Lowercasing Terms When Inserting a Thesaurus Document' on page&#160;158</A>.</Body>
<Heading-2>
<A ID="pgfId-1044086"></A>
<A ID="22906"></A>
Managing Thesaurus Documents</Heading-2>
<Body>
<A ID="pgfId-1044087"></A>
You can have any number of thesaurus documents in a database. You can also add to or modify any thesaurus documents that already exist. This section describes how to load and update thesaurus documents, and contains the following sections:</Body>
<Body-bullet>
<A ID="pgfId-1044091"></A>
<A href="thesaurus.xml#id(61221)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Loading Thesaurus Documents</Hyperlink>
</A></Body-bullet>
<Body-bullet>
<A ID="pgfId-1045198"></A>
<A href="thesaurus.xml#id(65318)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Lowercasing Terms When Inserting a Thesaurus Document</Hyperlink>
</A></Body-bullet>
<Body-bullet>
<A ID="pgfId-1044095"></A>
<A href="thesaurus.xml#id(23525)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Loading the XML Version of the WordNet Thesaurus</Hyperlink>
</A></Body-bullet>
<Body-bullet>
<A ID="pgfId-1044099"></A>
<A href="thesaurus.xml#id(69405)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Updating a Thesaurus Document</Hyperlink>
</A></Body-bullet>
<Body-bullet>
<A ID="pgfId-1044103"></A>
<A href="thesaurus.xml#id(65826)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Security Considerations With Thesaurus Documents</Hyperlink>
</A></Body-bullet>
<Body-bullet>
<A ID="pgfId-1044930"></A>
<A href="thesaurus.xml#id(65866)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Example Queries Using Thesaurus Management Functions</Hyperlink>
</A></Body-bullet>
<Heading-3>
<A ID="pgfId-1044105"></A>
<A ID="61221"></A>
Loading Thesaurus Documents</Heading-3>
<Body>
<A ID="pgfId-1044106"></A>
To use a thesaurus in a query, use the <code>
thsr:load</code>
 function or the <code>
thsr:insert</code>
 function to load a document as a thesaurus. For example, to load a thesaurus document with a URI <code>
/myThsrDocs/wordnet.xml</code>
, execute a query similar to the following:</Body>
<CodeLeft>
<A ID="pgfId-1044107"></A>
xquery version &quot;1.0-ml&quot;;
import module namespace thsr=&quot;http://marklogic.com/xdmp/thesaurus&quot; 
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;at &quot;/MarkLogic/thesaurus.xqy&quot;;

thsr:load(&quot;c:\thesaurus\wordnet.xml&quot;, &quot;/myThsrDocs/wordnet.xml&quot;)</CodeLeft>
<Body>
<A ID="pgfId-1044108"></A>
This XQuery adds all of the <code>
&lt;entry&gt;</code>
 elements from the <code>
c:\thesaurus\wordnet.xml</code>
 file to a thesaurus with the URI <code>
/myThsrDocs/wordnet.xml</code>
. If the document already exists, then it is overwritten with the new content from the specified file.</Body>
<Note>
<A ID="pgfId-1049475"></A>
If you have a thesaurus document that are too large to fit into an in-memory list, you can split the thesaurus into multiple documents. If you do this, you must specify all of the thesaurus documents in the thesaurus APIs that take URIs as a parameter. Also, ensure that there are no duplicate entries between the different thesaurus documents.</Note>
<Heading-3>
<A ID="pgfId-1045123"></A>
<A ID="65318"></A>
Lowercasing Terms When Inserting a Thesaurus Document</Heading-3>
<Body>
<A ID="pgfId-1045127"></A>
You can use the <code>
thsr:insert</code>
 function to perform transformation on a document before inserting it as a thesaurus document. The following example shows how you can use the <code>
xdmp:get</code>
 function to load a document into memory, then walk through the in-memory document and construct a new document which has lowercase terms.</Body>
<Code>
<A ID="pgfId-1045139"></A>
xquery version &quot;1.0-ml&quot;;
import module namespace thsr=&quot;http://marklogic.com/xdmp/thesaurus&quot; 
                             at &quot;/MarkLogic/thesaurus.xqy&quot;;

thsr:insert(&quot;newThsr.xml&quot;,
&#160;&#160;&#160;&#160;&#160;let $thsrMem := xdmp:get(&quot;C:\myFiles\thesaurus.xml&quot;) 
&#160;&#160;&#160;&#160;&#160;return 
&lt;thesaurus xmlns=&quot;http://marklogic.com/xdmp/thesaurus&quot;&gt;
{
&#160;&#160;&#160;for $entry in $thsrMem/thsr:entry 
&#160;&#160;&#160;return 
&#160;&#160;&#160;&#160;&#160;&#160;&#160;(: Write out and lowercase the term, then write out all of 
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;the children of this entry except for the term, which was &#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;already written out and lowercased :)
&#160;&#160;&#160;&#160;&#160;&lt;thsr:entry&gt;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;thsr:term&gt;{lower-case($entry/thsr:term)}&lt;/thsr:term&gt;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;{$entry/*[. ne $entry/thsr:term]}
&#160;&#160;&#160;&#160;&#160;&#160;&lt;/thsr:entry&gt;
}
&lt;/thesaurus&gt;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;)</Code>
<Heading-3>
<A ID="pgfId-1044110"></A>
<A ID="23525"></A>
Loading the XML Version of the WordNet Thesaurus</Heading-3>
<Body>
<A ID="pgfId-1045096"></A>
You can download an XML version of the <Emphasis>
WordNet</Emphasis>
 from the MarkLogic Developer site (<Hyperlink>
<A href="http://developer.marklogic.com/code/" xml:link="simple" show="replace" actuate="user" CLASS="URL">developer.marklogic.com</A></Hyperlink>
). Once you download the thesaurus file, you can load it as a thesaurus document using the <code>
thsr:load</code>
 function. </Body>
<Body>
<A ID="pgfId-1044112"></A>
Perform the following steps to download and load the <Emphasis>
WordNet Thesaurus</Emphasis>
:</Body>
<Number1>
<A ID="pgfId-1044113"></A>
Go to the <Emphasis>
Workshop</Emphasis>
 page of developer.marklogic.com:</Number1>
<Code>
<A ID="pgfId-1044114"></A>
http://developer.marklogic.com/code/default.xqy</Code>
<NumberList>
<Number>
<A ID="pgfId-1044115"></A>
Navigate to the thesaurus document section and find the <code>
thesaurus.xml</code>
 document.</Number>
<Number>
<A ID="pgfId-1044806"></A>
Save <code>
thesaurus.xml</code>
 to a file (for example, <code>
c:\thesaurus\thesaurus.xml</code>
).</Number>
<Number>
<A ID="pgfId-1044116"></A>
Load the thesaurus with a command similar to the following:</Number>
</NumberList>
<Code>
<A ID="pgfId-1044117"></A>
xquery version &quot;1.0-ml&quot;;
import module namespace thsr=&quot;http://marklogic.com/xdmp/thesaurus&quot; 
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;at &quot;/MarkLogic/thesaurus.xqy&quot;;

thsr:load(&quot;c:\thesaurus\thesaurus.xml&quot;, &quot;/myThsrDocs/wordnet.xml&quot;)</Code>
<EndList-root>
<A ID="pgfId-1044118"></A>
This loads the thesaurus with a URI of /myThsrDocs/<code>
wordnet.xml</code>
. You can now use this URI with the thesaurus module functions.</EndList-root>
<Heading-3>
<A ID="pgfId-1044120"></A>
<A ID="69405"></A>
Updating a Thesaurus Document</Heading-3>
<Body>
<A ID="pgfId-1044121"></A>
Use the following thesaurus functions to modify existing thesaurus documents:</Body>
<Body-bullet>
<A ID="pgfId-1044122"></A>
<code>
thsr:set-entry</code>
</Body-bullet>
<Body-bullet>
<A ID="pgfId-1044123"></A>
<code>
thsr:add-synonym</code>
</Body-bullet>
<Body-bullet>
<A ID="pgfId-1044124"></A>
<code>
thsr:remove-entry</code>
</Body-bullet>
<Body-bullet>
<A ID="pgfId-1044832"></A>
<code>
thsr:remove-term</code>
</Body-bullet>
<Body-bullet>
<A ID="pgfId-1044833"></A>
<code>
thsr:remove-synonym</code>
</Body-bullet>
<Body>
<A ID="pgfId-1044834"></A>
Additionally, the <code>
thsr:insert</code>
 function adds entries to an existing thesaurus document (as well as creates a new one if one does not exist at the specified URI).</Body>
<Note>
<A ID="pgfId-1044127"></A>
The transactional unit in MarkLogic Server is a query; therefore, if you are performing multiple updates to the same thesaurus document, be sure to perform those updates as part of separate queries. You can place a semi-colon between the update statements to start a new query (and therefore a new transaction). If you use a semicolon to start any new queries that uses thesaurus functions, each query must include the <code>
import</code>
 statement in the prolog to resolve the thesaurus namespace.</Note>
<Heading-3>
<A ID="pgfId-1044129"></A>
<A ID="65826"></A>
Security Considerations With Thesaurus Documents</Heading-3>
<Body>
<A ID="pgfId-1044130"></A>
Thesaurus documents are stored in XML format in the database. Therefore, they can be queried just like any other document. Note the following about security and thesaurus documents:</Body>
<Body-bullet>
<A ID="pgfId-1044131"></A>
By default, thesaurus documents are loaded into the following collections:</Body-bullet>
<Body-bullet-2>
<A ID="pgfId-1044852"></A>
http://marklogic.com/xdmp/documents</Body-bullet-2>
<Body-bullet-2>
<A ID="pgfId-1044853"></A>
http://marklogic.com/xdmp/thesaurus </Body-bullet-2>
<Body-bullet>
<A ID="pgfId-1044854"></A>
Thesaurus documents are loaded with the default permissions of the user who loads them. Make sure users who load thesaurus documents have approriate privileges, otherwise the documents might not have the needed permissions for reading and updating. For more information, see <A href="../dev_guide/loading.xml#id(86350)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Permissions on Documents</Hyperlink>
</A> in the <A href="../dev_guide/loading.xml#id(46976)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Loading Documents into the Database</Hyperlink>
</A> chapter of the <Emphasis>
Application Developer's Guide</Emphasis>
.</Body-bullet>
<Body-bullet>
<A ID="pgfId-1044135"></A>
If you want to control access (read and/or write) to thesaurus documents beyond the default permissions with which the documents are loaded, perform an <code>
xdmp:document-set-permissions</code>
 after a <code>
thsr:load</code>
 operation.</Body-bullet>
<Heading-3>
<A ID="pgfId-1044136"></A>
<A ID="65866"></A>
Example Queries Using Thesaurus Management Functions</Heading-3>
<Body>
<A ID="pgfId-1044932"></A>
This section includes the following examples:</Body>
<Body-bullet>
<A ID="pgfId-1044935"></A>
<A href="thesaurus.xml#id(47694)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Example: Adding a New Thesaurus Entry</Hyperlink>
</A></Body-bullet>
<Body-bullet>
<A ID="pgfId-1044958"></A>
<A href="thesaurus.xml#id(11592)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Example: Removing a Thesaurus Entry</Hyperlink>
</A></Body-bullet>
<Body-bullet>
<A ID="pgfId-1044963"></A>
<A href="thesaurus.xml#id(96889)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Example: Removing Term(s) from a Thesaurus</Hyperlink>
</A></Body-bullet>
<Body-bullet>
<A ID="pgfId-1044968"></A>
<A href="thesaurus.xml#id(95108)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Example: Adding a Synonym to a Thesaurus Entry</Hyperlink>
</A></Body-bullet>
<Body-bullet>
<A ID="pgfId-1044973"></A>
<A href="thesaurus.xml#id(69370)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Example: Removing a Synonym From a Thesaurus</Hyperlink>
</A></Body-bullet>
<Heading-4>
<A ID="pgfId-1044931"></A>
<A ID="47694"></A>
Example: Adding a New Thesaurus Entry</Heading-4>
<Body>
<A ID="pgfId-1044137"></A>
The following XQuery uses the <code>
thsr:set-entry</code>
 function to add an entry for <Emphasis>
Car</Emphasis>
 to the thesaurus with URI /myThsrDocs/<code>
wordnet.xml</code>
:</Body>
<Code>
<A ID="pgfId-1044138"></A>
xquery version &quot;1.0-ml&quot;;
import module namespace thsr=&quot;http://marklogic.com/xdmp/thesaurus&quot; 
                             at &quot;/MarkLogic/thesaurus.xqy&quot;;

thsr:set-entry(&quot;/myThsrDocs/wordnet.xml&quot;, 
&lt;entry xmlns=&quot;http://marklogic.com/xdmp/thesaurus&quot;&gt;
    &lt;term&gt;Car&lt;/term&gt;
    &lt;synonym&gt;
      &lt;term&gt;Ford&lt;/term&gt;
      &lt;part-of-speech&gt;noun&lt;/part-of-speech&gt;
    &lt;/synonym&gt;
    &lt;synonym&gt;
      &lt;term&gt;automobile&lt;/term&gt;
      &lt;part-of-speech&gt;noun&lt;/part-of-speech&gt;
    &lt;/synonym&gt;
&#160;&#160;&#160;&#160;&lt;synonym&gt;
      &lt;term&gt;Fiat&lt;/term&gt;
      &lt;part-of-speech&gt;noun&lt;/part-of-speech&gt;
    &lt;/synonym&gt;
&lt;/entry&gt;)</Code>
<Body>
<A ID="pgfId-1044139"></A>
If the <code>
/myThsrDocs/wordnet.xml</code>
 thesaurus has an identical entry, there will be no change to the thesaurus. If the thesaurus has no entry for <Emphasis>
car</Emphasis>
 or has an entry for <Emphasis>
car</Emphasis>
 that is not identical (that is, where the nodes are not equivalent), it will add the new entry. The new entry is added to the end of the thesaurus document.</Body>
<Heading-4>
<A ID="pgfId-1044140"></A>
<A ID="11592"></A>
Example: Removing a Thesaurus Entry</Heading-4>
<Body>
<A ID="pgfId-1044141"></A>
The following XQuery uses the <code>
thsr:remove-entry</code>
 function to remove the entry for <Emphasis>
Car</Emphasis>
 from the thesaurus with URI <code>
/myThsrDocs/wordnet.xml</code>
:</Body>
<Code>
<A ID="pgfId-1044142"></A>
xquery version &quot;1.0-ml&quot;;
import module namespace thsr=&quot;http://marklogic.com/xdmp/thesaurus&quot; 
                             at &quot;/MarkLogic/thesaurus.xqy&quot;;

thsr:remove-entry(&quot;/myThsrDocs/wordnet.xml&quot;, 
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;thsr:lookup(&quot;/myThsrDocs/wordnet.xml&quot;,&quot;Car&quot;)[2])</Code>
<Body>
<A ID="pgfId-1044143"></A>
This removes the second entry for <Emphasis>
Car</Emphasis>
 from the <code>
/myThsrDocs/wordnet.xml</code>
 thesaurus document.</Body>
<Heading-4>
<A ID="pgfId-1044728"></A>
<A ID="96889"></A>
Example: Removing Term(s) from a Thesaurus</Heading-4>
<Body>
<A ID="pgfId-1044729"></A>
The following XQuery uses the <code>
thsr:remove-term</code>
 function to remove all entries for the term <Emphasis>
Car</Emphasis>
 from the thesaurus with URI <code>
/myThsrDocs/wordnet.xml</code>
:</Body>
<Code>
<A ID="pgfId-1044730"></A>
xquery version &quot;1.0-ml&quot;;
import module namespace thsr=&quot;http://marklogic.com/xdmp/thesaurus&quot; 
                             at &quot;/MarkLogic/thesaurus.xqy&quot;;

thsr:remove-term(&quot;/myThsrDocs/wordnet.xml&quot;, &quot;Car&quot;)</Code>
<Body>
<A ID="pgfId-1044731"></A>
This removes all of the <Emphasis>
Car</Emphasis>
 terms from the <code>
/myThsrDocs/wordnet.xml</code>
 thesaurus document. If you only have a single term for <Emphasis>
Car</Emphasis>
 in the thesaurus, the <code>
thsr:remove-term</code>
 function does the same as the <code>
thsr:remove-entry</code>
 function.</Body>
<Heading-4>
<A ID="pgfId-1044144"></A>
<A ID="95108"></A>
Example: Adding a Synonym to a Thesaurus Entry</Heading-4>
<Body>
<A ID="pgfId-1044145"></A>
The following XQuery adds the synonym <Emphasis>
Alfa Romeo</Emphasis>
 to the thesaurus entry for <Emphasis>
car</Emphasis>
 in the thesaurus with URI <code>
/myThsrDocs/wordnet.xml</code>
:</Body>
<Code>
<A ID="pgfId-1044146"></A>
xquery version &quot;1.0-ml&quot;;
import module namespace thsr=&quot;http://marklogic.com/xdmp/thesaurus&quot; 
                             at &quot;/MarkLogic/thesaurus.xqy&quot;;

thsr:add-synonym(thsr:lookup(&quot;/myThsrDocs/wordnet.xml&quot;, &quot;car&quot;), 
                 &lt;thsr:synonym&gt;
                    &lt;thsr:term&gt;Alfa Romeo&lt;/thsr:term&gt;
                 &lt;/thsr:synonym&gt;)</Code>
<Body>
<A ID="pgfId-1044147"></A>
This query assumes that the lookup for the <Emphasis>
car</Emphasis>
 thesaurus entry returns a single entry. If the <Emphasis>
car</Emphasis>
 lookup returns multiple entries, you must specify a single entry. For example, if you wanted to add the synonym to the first <Emphasis>
car</Emphasis>
 entry in the thesaurus, specify the first argument as follows:</Body>
<Code>
<A ID="pgfId-1044148"></A>
thsr:lookup(&quot;/myThsrDocs/wordnet.xml&quot;, &quot;car&quot;)[1]</Code>
<Heading-4>
<A ID="pgfId-1044149"></A>
<A ID="69370"></A>
Example: Removing a Synonym From a Thesaurus</Heading-4>
<Body>
<A ID="pgfId-1044150"></A>
The following XQuery removes the synonym <Emphasis>
Fiat</Emphasis>
 from the thesaurus entry for <Emphasis>
car</Emphasis>
 in the thesaurus with URI <code>
/myThsrDocs/wordnet.xml</code>
:</Body>
<Code>
<A ID="pgfId-1044151"></A>
xquery version &quot;1.0-ml&quot;;
import module namespace thsr=&quot;http://marklogic.com/xdmp/thesaurus&quot; 
                             at &quot;/MarkLogic/thesaurus.xqy&quot;;

thsr:remove-synonym(thsr:lookup(&quot;/myThsrDocs/wordnet.xml&quot;, &quot;car&quot;), 
                 &lt;thsr:synonym&gt;
                    &lt;thsr:term&gt;Fiat&lt;/thsr:term&gt;
                 &lt;/thsr:synonym&gt;)</Code>
<Body>
<A ID="pgfId-1044152"></A>
This query assumes that the lookup for the <Emphasis>
car</Emphasis>
 thesaurus entry returns a single entry. If the <Emphasis>
car</Emphasis>
 lookup returns multiple entries, you must specify a single entry. For example, if you wanted to remove the synonym from the first <Emphasis>
car</Emphasis>
 entry in the thesaurus, specify the first argument as follows:</Body>
<Code>
<A ID="pgfId-1044153"></A>
thsr:lookup(&quot;/myThsrDocs/wordnet.xml&quot;, &quot;car&quot;)[1]</Code>
<Heading-2>
<A ID="pgfId-1044155"></A>
<A ID="28692"></A>
Expanding Searches Using a Thesaurus</Heading-2>
<Body>
<A ID="pgfId-1044156"></A>
You can expand a search to include terms from a thesaurus as well as the terms entered in the search. Consider the following query:</Body>
<Code>
<A ID="pgfId-1044157"></A>
xquery version &quot;1.0-ml&quot;;
import module namespace thsr=&quot;http://marklogic.com/xdmp/thesaurus&quot; at &quot;/MarkLogic/thesaurus.xqy&quot;;

cts:search(
doc(&quot;/Docs/hamlet.xml&quot;)//LINE,
thsr:expand(
  cts:word-query(&quot;weary&quot;), 
  thsr:lookup(&quot;/myThsrDocs/thesaurus.xml&quot;, &quot;weary&quot;),
  (), 
  (), 
  () )
)</Code>
<Body>
<A ID="pgfId-1044158"></A>
This query finds all of the lines in Shakespeare's <Emphasis>
Hamlet</Emphasis>
 that have the word <Emphasis>
weary</Emphasis>
 or any of the synonyms of the word <Emphasis>
weary</Emphasis>
. </Body>
<Body>
<A ID="pgfId-1044159"></A>
Thesaurus entries can have many synonyms, though. Therefore, when you expand a search, you might want to create a user interface in the application which provides a form allowing a user to specify the desired synonyms from the list returned by <code>
thsr:expand</code>
. Once the user chooses which synonyms to include in the search, the application can add those terms to the search and submit it to the database.</Body>
</XML>

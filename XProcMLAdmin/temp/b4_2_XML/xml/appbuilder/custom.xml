<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="custom.css" type="text/css" charset="UTF-8"?>
<XML>
<TITLE> </TITLE><Heading-1>
<A ID="pgfId-1043259"></A>
<A ID="58638"></A>
Extending Applications Built With Application Builder</Heading-1>
<pagenum>
<A ID="pgfId-1062923"></A>
54</pagenum>
<Body>
<A ID="pgfId-1043261"></A>
Application Builder generates search applications according to certain templates. The applications are designed to be extended and modified in a number of ways. This chapter describes how to extend and modify the generated applications and contains the following sections:</Body>
<Body-bullet>
<A ID="pgfId-1063590"></A>
<A href="custom.xml#id(84959)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Finding the Generated Code</Hyperlink>
</A></Body-bullet>
<Body-bullet>
<A ID="pgfId-1065609"></A>
<A href="custom.xml#id(81708)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
The Custom Directory</Hyperlink>
</A></Body-bullet>
<Body-bullet>
<A ID="pgfId-1058379"></A>
<A href="custom.xml#id(85628)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Customizing Applications Generated by Application Builder</Hyperlink>
</A></Body-bullet>
<Body-bullet>
<A ID="pgfId-1064046"></A>
<A href="custom.xml#id(67457)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Making Further Modifications to the Application</Hyperlink>
</A></Body-bullet>
<Body-bullet>
<A ID="pgfId-1069726"></A>
<A href="custom.xml#id(43251)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Removing Modifications to an Application</Hyperlink>
</A></Body-bullet>
<Heading-2>
<A ID="pgfId-1065305"></A>
<A ID="84959"></A>
Finding the Generated Code</Heading-2>
<Body>
<A ID="pgfId-1065350"></A>
When you deploy an application, it deploys the code to the modules database for the App Server specified on the Deploy page of Application Builder. To view your code, look in the modules database in the <code>
/application/</code>
 directory. You can look at the documents in the modules database by setting up a WebDAV server to the modules database or by using any other method for looking at documents in a database. The entire application is there, including all of the images, libraries, and other components.</Body>
<Body>
<A ID="pgfId-1066385"></A>
Another way to view the code is to generate a support package from Application Builder, as described in <A href="wizard.xml#id(71856)" xml:link="simple" show="replace" actuate="user" CLASS="XRef">'Navigating Through the User Interface' on page&#160;17</A>. The support package is a zip file that contains the entire generated application, and the application code is under the <code>
application</code>
 directory of the support package.</Body>
<Body>
<A ID="pgfId-1066412"></A>
The following tables list the files of interest in the <code>
lib</code>
, <code>
css</code>
 and <code>
js</code>
 directories under the <code>
application</code>
 directory. </Body>
<WarningList>
<Warning>
<A ID="pgfId-1066713"></A>
Do not update the files in any of these directories. Otherwise, the next time you make changes to your application in App Builder, the changes you made to these modules will be overwritten. Instead, modify the files described in <A href="custom.xml#id(81708)" xml:link="simple" show="replace" actuate="user" CLASS="XRef">'The Custom Directory' on page&#160;43</A>.</Warning>
</WarningList>
<Body>
<A ID="pgfId-1065354"></A>
The files in the <code>
/application/lib</code>
 directory are shown below:</Body>
<TABLE>
<ROW>
<TH ROWSPAN="1" COLSPAN="1">
<CellHeading>
<A ID="pgfId-1065405"></A>
File</CellHeading>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<CellHeading>
<A ID="pgfId-1065407"></A>
Description</CellHeading>
</TH>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Body>
<A ID="pgfId-1065409"></A>
<code>
config.xqy</code>
</Body>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<Body>
<A ID="pgfId-1065411"></A>
Contains the variable declarations that use function values to specify the code to run for various features in the application. Many of the variables in this file can be overridden by the <code>
/application/custom</code>
 /<code>
appfunctions.xqy</code>
 module.</Body>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Body>
<A ID="pgfId-1065413"></A>
<code>
standard.xqy</code>
</Body>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<Body>
<A ID="pgfId-1065415"></A>
Contains the functions that are called from <code>
config.xqy</code>
. </Body>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Body>
<A ID="pgfId-1066295"></A>
<code>
transform-detail.xsl</code>
</Body>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<Body>
<A ID="pgfId-1066297"></A>
Contains the XSLT used to render the detail page in your application.</Body>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Body>
<A ID="pgfId-1066291"></A>
<code>
transform-abstract-
metadata.xsl</code>
</Body>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<Body>
<A ID="pgfId-1066293"></A>
Contains the XSLT used to render the meta section of individual search results in your application.</Body>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Body>
<A ID="pgfId-1066287"></A>
<code>
transform-abstract-
title.xsl</code>
</Body>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<Body>
<A ID="pgfId-1066289"></A>
Contains the XSLT used to render the title section of individual search results in your application.</Body>
</CELL>
</ROW>
</TABLE>
<Body>
<A ID="pgfId-1066500"></A>
The files in the <code>
/application/css</code>
 directory are shown below:</Body>
<TABLE>
<ROW>
<TH ROWSPAN="1" COLSPAN="1">
<CellHeading>
<A ID="pgfId-1066477"></A>
File</CellHeading>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<CellHeading>
<A ID="pgfId-1066479"></A>
Description</CellHeading>
</TH>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Body>
<A ID="pgfId-1066481"></A>
<code>
master.css</code>
</Body>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<Body>
<A ID="pgfId-1066483"></A>
Contains the generic style information for applications</Body>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Body>
<A ID="pgfId-1066485"></A>
<code>
custom.css</code>
</Body>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<Body>
<A ID="pgfId-1066487"></A>
Contains the style information customized in App Builder</Body>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Body>
<A ID="pgfId-1066489"></A>
<code>
ie_6.css</code>
</Body>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<Body>
<A ID="pgfId-1066491"></A>
Contains the style information specific the Internet Explorer, Version 6.</Body>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Body>
<A ID="pgfId-1066493"></A>
<code>
ie_7.css</code>
</Body>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<Body>
<A ID="pgfId-1066495"></A>
Contains the style information specific the Internet Explorer, Version 7.</Body>
</CELL>
</ROW>
</TABLE>
<Body>
<A ID="pgfId-1066622"></A>
The files in the <code>
/application/js</code>
 directory are shown below:</Body>
<TABLE>
<ROW>
<TH ROWSPAN="1" COLSPAN="1">
<CellHeading>
<A ID="pgfId-1066603"></A>
File</CellHeading>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<CellHeading>
<A ID="pgfId-1066605"></A>
Description</CellHeading>
</TH>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Body>
<A ID="pgfId-1066607"></A>
<code>
application.js</code>
</Body>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<Body>
<A ID="pgfId-1066609"></A>
Contains the JavaScript code used by your applications.</Body>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Body>
<A ID="pgfId-1066611"></A>
<code>
sample-application.js</code>
</Body>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<Body>
<A ID="pgfId-1066613"></A>
Contains the JavaScript code used by the Sample applications.</Body>
</CELL>
</ROW>
</TABLE>
<Heading-2>
<A ID="pgfId-1069898"></A>
<A ID="81708"></A>
The Custom Directory</Heading-2>
<Body>
<A ID="pgfId-1065537"></A>
The files in the <code>
/application/custom</code>
 directory enable you to override the code in the <code>
config.xqy</code>
 and <code>
standard.xqy</code>
 files and preserve those changes when the application is redeployed by App Builder.</Body>
<Body>
<A ID="pgfId-1065834"></A>
The files in the <code>
/application/custom</code>
 directory are shown below:</Body>
<TABLE>
<ROW>
<TH ROWSPAN="1" COLSPAN="1">
<CellHeading>
<A ID="pgfId-1065801"></A>
File</CellHeading>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<CellHeading>
<A ID="pgfId-1065803"></A>
Description</CellHeading>
</TH>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Body>
<A ID="pgfId-1065805"></A>
<code>
appfunctions.xqy</code>
</Body>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<Body>
<A ID="pgfId-1065807"></A>
This module contains most of the variables in the <code>
config.xqy </code>
module and the same functions as the <code>
standard.xqy </code>
module. Unlike the <code>
standard.xqy </code>
or<code>
 config.xqy </code>
modules, any changes you make to a variable or function in the <code>
appfunctions.xqy</code>
 module will survive redeployment.</Body>
<Body>
<A ID="pgfId-1067857"></A>
Modifying a variable in this module will override the respective variable in the <code>
config.xqy </code>
module.</Body>
<Body>
<A ID="pgfId-1067850"></A>
Each function in the <code>
appfunctions.xqy</code>
 module is commented out. Removing the comments from a function in the <code>
appfunctions.xqy</code>
 module will override the respective function in the <code>
standard.xqy </code>
module. </Body>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Body>
<A ID="pgfId-1065809"></A>
<code>
appcss.css</code>
</Body>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<Body>
<A ID="pgfId-1065989"></A>
Styles added to this file override those in the CSS files located in the <code>
/application/css</code>
 directory.</Body>
<Body>
<A ID="pgfId-1067769"></A>
Note that the <code>
$ADDITIONAL-CSS </code>
variable in the <code>
appfunctions.xqy</code>
 module points to this file. If you want to add other CSS files for your application, you can put the files in <code>
/custom</code>
 and update the <code>
$ADDITIONAL-CSS </code>
variable to load them in the desired order.</Body>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Body>
<A ID="pgfId-1065813"></A>
<code>
appjs.js</code>
</Body>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<Body>
<A ID="pgfId-1067709"></A>
JavaScripts added to this file override the scripts located in the <code>
/application/js</code>
 directory. </Body>
<Body>
<A ID="pgfId-1067757"></A>
Note that the <code>
$ADDITIONAL-JS </code>
variable in the <code>
appfunctions.xqy</code>
 module points to this file. If you want to support jQuery or other frameworks, you can put the files in <code>
/custom</code>
 and update the <code>
$ADDITIONAL-JS </code>
variable to load them in the desired order.</Body>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Body>
<A ID="pgfId-1065817"></A>
<code>
apptransform-detail.xsl</code>
</Body>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<Body>
<A ID="pgfId-1065819"></A>
XSLT added to this file overrides the XSLT in the <code>
/application/lib/transform-detail.xsl</code>
 file. This XSLT is used to render the detail page in your application.</Body>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Body>
<A ID="pgfId-1065821"></A>
<code>
apptransform-abstract-
metadata.xsl</code>
</Body>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<Body>
<A ID="pgfId-1065823"></A>
XSLT added to this file overrides the XSLT in the <code>
/application/lib/transform-abstract-metadata.xsl</code>
 file. This XSLT is used to render the meta section of individual search results in your application.</Body>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<Body>
<A ID="pgfId-1065825"></A>
<code>
apptransform-abstract-
title.xsl</code>
</Body>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<Body>
<A ID="pgfId-1065827"></A>
XSLT added to this file overrides the XSLT in the <code>
/application/lib/transform-abstract-title.xsl</code>
 file. This XSLT is used to render the title section of individual search results in your application.</Body>
</CELL>
</ROW>
</TABLE>
<Heading-2>
<A ID="pgfId-1063562"></A>
<A ID="85628"></A>
Customizing Applications Generated by Application Builder</Heading-2>
<Body>
<A ID="pgfId-1063088"></A>
This section describes how to customize the application generated using Application Builder, and contains the following parts:</Body>
<Body-bullet>
<A ID="pgfId-1063107"></A>
<A href="custom.xml#id(28882)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Basic Design Pattern</Hyperlink>
</A></Body-bullet>
<Body-bullet>
<A ID="pgfId-1070344"></A>
<A href="custom.xml#id(86837)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Accessing the Code in the Custom Directory</Hyperlink>
</A></Body-bullet>
<Body-bullet>
<A ID="pgfId-1070112"></A>
<A href="custom.xml#id(93564)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Road Map for Application Page Functions</Hyperlink>
</A></Body-bullet>
<Body-bullet>
<A ID="pgfId-1063259"></A>
<A href="custom.xml#id(44011)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Customizing the Footer</Hyperlink>
</A></Body-bullet>
<Body-bullet>
<A ID="pgfId-1063270"></A>
<A href="custom.xml#id(49337)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Customizing the Content Display</Hyperlink>
</A></Body-bullet>
<Body-bullet>
<A ID="pgfId-1069127"></A>
<A href="custom.xml#id(17087)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Customizing the Detail Page</Hyperlink>
</A></Body-bullet>
<Body-bullet>
<A ID="pgfId-1070376"></A>
<A href="custom.xml#id(61357)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Customizing the Generated Search Options Node</Hyperlink>
</A></Body-bullet>
<Note>
<A ID="pgfId-1063285"></A>
Modifications you make to the generated application must be made to the files located in the <code>
/application/custom</code>
 directory, as described in <A href="custom.xml#id(81708)" xml:link="simple" show="replace" actuate="user" CLASS="XRef">'The Custom Directory' on page&#160;43</A>. </Note>
<Heading-3>
<A ID="pgfId-1063081"></A>
<A ID="28882"></A>
Basic Design Pattern</Heading-3>
<Body>
<A ID="pgfId-1063147"></A>
The applications generated from Application Builder are designed to be extensible so you can easily modify them. The basic design pattern to modify the generated application is as follows:</Body>
<Body-bullet>
<A ID="pgfId-1064013"></A>
Find the variables and functions in <code>
/application/custom/appfunctions.xqy</code>
 that correspond to the part of the application you want to modify.</Body-bullet>
<Body-bullet>
<A ID="pgfId-1063209"></A>
Remove the comments from the function in the <code>
/application/custom/appfunctions.xqy</code>
 file and modify. This function will override the respective function in the <code>
/application/lib/standard.xqy</code>
 file. For examples, see <A href="custom.xml#id(44011)" xml:link="simple" show="replace" actuate="user" CLASS="XRef">'Customizing the Footer' on page&#160;49</A> and <A href="custom.xml#id(49337)" xml:link="simple" show="replace" actuate="user" CLASS="XRef">'Customizing the Content Display' on page&#160;50</A>.</Body-bullet>
<Body-bullet>
<A ID="pgfId-1063217"></A>
Modify the <code>
/application/custom/appfunctions.xqy</code>
 variable declaration(s) to override the variables in the <code>
/application/lib/config.xqy</code>
 file. For examples, see <A href="custom.xml#id(61357)" xml:link="simple" show="replace" actuate="user" CLASS="XRef">'Customizing the Generated Search Options Node' on page&#160;52</A>.</Body-bullet>
<Body-bullet>
<A ID="pgfId-1070645"></A>
Similar modifications can be made to override the other files generated by Application Builder. For example, you can override the XSL in the <code>
/application/lib/transform-detail.xsl</code>
 file used to render the detail page by adding XSL to the <code>
/application/custom/apptransform-detail.xsl</code>
 file, as shown in <A href="custom.xml#id(17087)" xml:link="simple" show="replace" actuate="user" CLASS="XRef">'Customizing the Detail Page' on page&#160;51</A>.</Body-bullet>
<Heading-3>
<A ID="pgfId-1070307"></A>
<A ID="86837"></A>
Accessing the Code in the Custom Directory</Heading-3>
<Body>
<A ID="pgfId-1070308"></A>
To modify the code for the built application, you must gain access to the files in the <code>
/application/custom</code>
 directory in the application's modules database. One common way is to create a WebDAV App Server to the modules database, and then use that WebDAV App Server to access and modify the code. Many code development tools support WebDAV for editing. For details on WebDAV Servers, see <A href="../admin/webdav.xml#id(65018)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
WebDAV Servers</Hyperlink>
</A> in the <Emphasis>
Administrator's Guide</Emphasis>
.</Body>
<Body>
<A ID="pgfId-1070315"></A>
Another option is to copy the files in <code>
/application/custom</code>
 to your filesystem, then create an HTTP App Server using the same content database as your Application Builder-generated application. Set the root of the new App Server to the location of your copied code.</Body>
<Heading-3>
<A ID="pgfId-1070140"></A>
<A ID="93564"></A>
Road Map for Application Page Functions</Heading-3>
<Body>
<A ID="pgfId-1070141"></A>
This section shows the functions that control the specific sections of the application pages. All of the functions shown in this section can be modified in the <code>
custom/appfunctions.xqy</code>
 file. </Body>
<Body>
<A ID="pgfId-1070183"></A>
The functions illustrated below are common to all of the application pages. The illustrations that follow show the content sections for the default, search, and detail pages, along with any specific renditions of the sidebar. </Body>
<Body>
<A ID="pgfId-1070031"></A>
<IMAGE xml:link="simple" href="images/general-view-tagged.gif" show="embed" actuate="auto"/>
</Body>
<Body>
<A ID="pgfId-1070040"></A>
The content portion of the default page is controlled by the functions shown below:</Body>
<Body-indent>
<A ID="pgfId-1069990"></A>
<IMAGE xml:link="simple" href="images/default-view-tagged.gif" show="embed" actuate="auto"/>
</Body-indent>
<Body>
<A ID="pgfId-1070055"></A>
The content and sidebar portions of the search page is controlled by the functions shown below:</Body>
<Body>
<A ID="pgfId-1069994"></A>
<IMAGE xml:link="simple" href="images/search-view-tagged.gif" show="embed" actuate="auto"/>
</Body>
<Body>
<A ID="pgfId-1070078"></A>
The content portion of the detail page is controlled by the functions shown below:</Body>
<Body-indent>
<A ID="pgfId-1069998"></A>
<IMAGE xml:link="simple" href="images/detail-view-tagged.gif" show="embed" actuate="auto"/>
</Body-indent>
<Heading-3>
<A ID="pgfId-1064350"></A>
<A ID="44011"></A>
Customizing the Footer</Heading-3>
<Body>
<A ID="pgfId-1063127"></A>
To modify the footer in your generated application, find the <code>
app:footer</code>
 function in <code>
/application/custom/appfunctions.xqy</code>
:</Body>
<Code>
<A ID="pgfId-1067201"></A>
(:~
&#160;: Default footer content</Code>
<Code>
<A ID="pgfId-1067213"></A>
declare function app:footer()
as element(div)
{
&#160;&#160;&lt;div class=&quot;footer&quot; arcsize=&quot;0 0 5 5&quot;&gt;
&#160;&#160;&#160;&#160;&lt;span class=&quot;copyright&quot;&gt;&amp;copy;
&#160;&#160;&#160;&#160;&#160;&#160;{$config:SLOTS/slots:copyright-year/string()},
&#160;&#160;&#160;&#160;&#160;&#160;{$config:SLOTS/slots:copyright-holder/string()}, 
&#160;&#160;&#160;&#160;&#160;&#160;All Rights Reserved.
&#160;&#160;&#160;&#160;&lt;/span&gt;
&#160;&#160;&lt;/div&gt;
};
:)</Code>
<Body>
<A ID="pgfId-1064193"></A>
To create your own footer, simply remove the comments from the <code>
app:footer </code>
function definition and add your own <code>
copyright-year</code>
 and <code>
copyright-holder </code>
text. For example, to change the footer from the default:</Body>
<Code>
<A ID="pgfId-1067115"></A>
&#169; 2010, MarkLogic Corporation, All Rights Reserved.</Code>
<Body>
<A ID="pgfId-1067122"></A>
to:</Body>
<Code>
<A ID="pgfId-1067075"></A>
&#169; 2011, My Company, All Rights Reserved.</Code>
<Body>
<A ID="pgfId-1067129"></A>
Remove the comments around the function and modify as follows:</Body>
<Code>
<A ID="pgfId-1067177"></A>
(: Default footer content :)</Code>
<Code>
<A ID="pgfId-1067193"></A>
declare function app:footer()
as element(div)
{
&#160;&#160;&lt;div class=&quot;footer&quot; arcsize=&quot;0 0 5 5&quot;&gt;
&#160;&#160;&#160;&#160;&lt;span class=&quot;copyright&quot;&gt;&amp;copy;
&#160;&#160;&#160;&#160;&#160;&#160;{$config:SLOTS/slots:copyright-year/string(&quot;2011&quot;)},
&#160;&#160;&#160;&#160;&#160;&#160;{$config:SLOTS/slots:copyright-holder/string(&quot;My Company&quot;)}, 
&#160;&#160;&#160;&#160;&#160;&#160;All Rights Reserved.
&#160;&#160;&#160;&#160;&lt;/span&gt;
&#160;&#160;&lt;/div&gt;
};</Code>
<Body>
<A ID="pgfId-1067152"></A>
When you run your application, it will now use your new footer and the change will persist after redeploying the application in Application Builder.</Body>
<Heading-3>
<A ID="pgfId-1067154"></A>
<A ID="49337"></A>
Customizing the Content Display</Heading-3>
<Body>
<A ID="pgfId-1067501"></A>
To modify the content display in your generated application, find the <code>
app:content</code>
 function in <code>
/application/custom/appfunctions.xqy</code>
:</Body>
<Code>
<A ID="pgfId-1067329"></A>
(:~
&#160;: Page content</Code>
<Code>
<A ID="pgfId-1067425"></A>
declare function app:content()
as element(div)
{
&#160;&#160;&#160;&#160;&lt;div class=&quot;content&quot;&gt;
&#160;&#160;&#160;&#160;&lt;div class=&quot;content-background&quot;&gt;&lt;!-- --&gt;&lt;/div&gt;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;{ asc:get-content() }
&#160;&#160;&#160;&#160;&lt;/div&gt;
};
:)</Code>
<Body>
<A ID="pgfId-1064781"></A>
For example, to change the background of the content display to yellow, you can uncomment the function and modify the <code>
&lt;div&gt;</code>
 tag as follows:</Body>
<Code>
<A ID="pgfId-1067523"></A>
(: Page content :)</Code>
<Code>
<A ID="pgfId-1067976"></A>
declare function app:content()
as element(div)
{
&#160;&#160;&#160;&#160;&lt;div class=&quot;content&quot;&gt;
&#160;&#160;&#160;&#160;&lt;div class=&quot;content-background&quot; style=&quot;background: yellow&quot;&gt;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;!-- --&gt;
&#160;&#160;&#160;&#160;&lt;/div&gt;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;{ asc:get-content() }
&#160;&#160;&#160;&#160;&lt;/div&gt;
};</Code>
<Heading-3>
<A ID="pgfId-1068077"></A>
<A ID="17087"></A>
Customizing the Detail Page</Heading-3>
<Body>
<A ID="pgfId-1068366"></A>
You can modify the look of the detail page by adding XSL to the <code>
apptransform-detail.xsl</code>
 file. This overrides the XSL in the <code>
/application/lib/transform-detail.xsl</code>
 file. For example, you want to change the links in the Oscars application to the Wikipedia pages from this:</Body>
<Body-indent>
<A ID="pgfId-1068316"></A>
<IMAGE xml:link="simple" href="images/links-original.gif" show="embed" actuate="auto"/>
</Body-indent>
<Body>
<A ID="pgfId-1068457"></A>
to look like this:</Body>
<Body-indent>
<A ID="pgfId-1068104"></A>
<IMAGE xml:link="simple" href="images/links-new.gif" show="embed" actuate="auto"/>
</Body-indent>
<Body>
<A ID="pgfId-1068469"></A>
You can add the following code to the <code>
apptransform-detail.xsl</code>
 file:</Body>
<Code>
<A ID="pgfId-1068119"></A>
&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</Code>
<Code>
<A ID="pgfId-1069100"></A>
&lt;xsl:stylesheet extension-element-prefixes=&quot;xdmp&quot; version=&quot;2.0&quot;
&#160;&#160;xmlns:xsl=&quot;http://www.w3.org/1999/XSL/Transform&quot;
&#160;&#160;xmlns:config=&quot;http://marklogic.com/appservices/config&quot;
&#160;&#160;xmlns:translate=&quot;http://marklogic.com/translate&quot;
&#160;&#160;xmlns:html=&quot;http://www.w3.org/1999/xhtml&quot;
&#160;&#160;xmlns:xdmp=&quot;http://marklogic.com/xdmp&quot;&gt;
&lt;xsl:import href=&quot;../lib/transform-detail.xsl&quot;/&gt;</Code>
<Code>
<A ID="pgfId-1069168"></A>
&#160;&#160;&lt;xsl:template match=&quot;html:a&quot;&gt;
&#160;&#160;&#160;&#160;&lt;xsl:choose&gt;
&#160;&#160;&#160;&#160;&#160;&#160;&lt;xsl:when test=&quot;starts-with(@href, 'http://example.com/')&quot;&gt;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;xsl:apply-imports/&gt;
&#160;&#160;&#160;&#160;&#160;&#160;&lt;/xsl:when&gt;
&#160;&#160;&#160;&#160;&#160;&#160;&lt;xsl:otherwise&gt;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;span style=&quot;text-decoration: underline;&quot;&gt;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;xsl:apply-templates/&gt;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;/span&gt;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&lt;a href=&quot;{@href}&quot; title=&quot;External link&quot;&gt;â˜›&lt;/a&gt;
&#160;&#160;&#160;&#160;&#160;&#160;&lt;/xsl:otherwise&gt;
&#160;&#160;&#160;&#160;&lt;/xsl:choose&gt;
&#160;&#160;&lt;/xsl:template&gt;
&lt;/xsl:stylesheet&gt;</Code>
<Heading-3>
<A ID="pgfId-1068335"></A>
<A ID="61357"></A>
Customizing the Generated Search Options Node</Heading-3>
<Body>
<A ID="pgfId-1043276"></A>
Application Builder generates an options node which is passed into the various search API calls. You can modify the options node in the generated application by means of the <code>
$OPTIONS</code>
 and <code>
$ADDITIONAL-OPTIONS</code>
 variables in the <code>
appfunctions.xqy</code>
 file. For details about the options node and about the Search API, see <A href="../search-dev-guide/search-api.xml#id(71050)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Search API: Understanding and Using</Hyperlink>
</A> in the <Emphasis>
Search Developer's Guide</Emphasis>
.</Body>
<Body>
<A ID="pgfId-1063060"></A>
This section describes the process for adding options to the <code>
options</code>
 node and modifying existing options in the <code>
options</code>
 node:</Body>
<Body-bullet>
<A ID="pgfId-1062764"></A>
<A href="custom.xml#id(76540)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Adding a searchable-expression Option</Hyperlink>
</A></Body-bullet>
<Body-bullet>
<A ID="pgfId-1062879"></A>
<A href="custom.xml#id(88018)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Modifying the transform-results Option</Hyperlink>
</A></Body-bullet>
<Heading-4>
<A ID="pgfId-1062825"></A>
<A ID="76540"></A>
Adding a searchable-expression Option</Heading-4>
<Body>
<A ID="pgfId-1069220"></A>
If you do not want to search over the whole database, you can add a <code>
searchable-expression</code>
 option in the <code>
search:options</code>
 node. For example, if you want the application to return <code>
/root/my-node</code>
, you can add a <code>
searchable-expression</code>
 to the <code>
options</code>
 node by adding it to the <code>
$ADDITIONAL-OPTIONS</code>
 variable in the <code>
appfunctions.xqy</code>
 file:</Body>
<Code>
<A ID="pgfId-1069221"></A>
declare variable $ADDITIONAL-OPTIONS := (
&#160;&#160;&#160;&#160;&lt;searchable-expression&gt;/root/my-node&lt;/searchable-expression&gt;
);</Code>
<Body>
<A ID="pgfId-1064565"></A>
It is a good idea for the <code>
searchable-expression</code>
 value to be a fragment root. If you do search below a fragment root, it is a good idea to filter your output. These settings will affect the accuracy of the various counts in the search results for your application. You can set whether to filter results in the search options, as described in <A href="wizard.xml#id(61168)" xml:link="simple" show="replace" actuate="user" CLASS="XRef">'Modifying Search Options' on page&#160;30</A>. For more details on filtered and unfiltered searches, see <A href="../performance/unfiltered.xml#id(38698)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Fast Pagination and Unfiltered Searches</Hyperlink>
</A> in <Emphasis>
Query Performance and Tuning Guide</Emphasis>
. </Body>
<Heading-4>
<A ID="pgfId-1063043"></A>
<A ID="88018"></A>
Modifying the transform-results Option</Heading-4>
<Body>
<A ID="pgfId-1063074"></A>
Snippetting is often specific to a particular content set or application. You can modify the <code>
transform-results</code>
 option in the <code>
options</code>
 node to specify that the Search API execute your own snippet code to generate the result display.</Body>
<Body>
<A ID="pgfId-1069344"></A>
For example, the following option specifies that the application use the <code>
my-snippet</code>
 function in the library module <code>
/my-module.xqy</code>
 under the App Server root. </Body>
<Code>
<A ID="pgfId-1069576"></A>
&lt;transform-results apply=&quot;my-snippet&quot; ns=&quot;my-namespace&quot;
&#160;&#160;&#160;&#160;&#160;at=&quot;/my-module.xqy&quot; /&gt;</Code>
<Body>
<A ID="pgfId-1069605"></A>
To modify the <code>
transform-results</code>
 option, copy the entire <code>
options</code>
 node from the <code>
config.xqy</code>
 file and paste it into the <code>
$OPTIONS</code>
 variable in the <code>
appfunctions.xqy</code>
 file. Then change the <code>
transform-results</code>
 option as follows:</Body>
<Code>
<A ID="pgfId-1063717"></A>
declare variable $OPTIONS := (
&#160;&#160;&#160;&#160;&lt;options xmlns=&quot;http://marklogic.com/appservices/search&quot;&gt;
&#160;&#160;&#160;&#160;.......
&#160;&#160;&#160;&#160;&lt;transform-results apply=&quot;my-snippet&quot; ns=&quot;my-namespace&quot;
&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;&#160;at=&quot;/my-module.xqy&quot; /&gt;
&#160;&#160;&#160;&#160;.......
&#160;&#160;&#160;&#160;&lt;/options&gt;
);</Code>
<Body>
<A ID="pgfId-1063053"></A>
For more details about modifying snippets, including the function signature that your code must be compatible with, see <A href="../search-dev-guide/search-api.xml#id(58295)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Modifying Your Snippet Results</Hyperlink>
</A> in the <Emphasis>
Search Developer's Guide</Emphasis>
.</Body>
<Heading-2>
<A ID="pgfId-1064053"></A>
<A ID="67457"></A>
Making Further Modifications to the Application</Heading-2>
<Body>
<A ID="pgfId-1064063"></A>
The generated application is an XQuery application, and you can make any kind of modifications to it that you want. It is designed to make modifications like the ones already described in <A href="custom.xml#id(85628)" xml:link="simple" show="replace" actuate="user" CLASS="XRef">'Customizing Applications Generated by Application Builder' on page&#160;44</A> and <A href="custom.xml#id(61357)" xml:link="simple" show="replace" actuate="user" CLASS="XRef">'Customizing the Generated Search Options Node' on page&#160;52</A>. There are many more such modifications you can make, and you can also take the application code as a starting point and make more substantial modifications. Consider your application requirements and decide what is level of modification is right for your application.</Body>
<Heading-2>
<A ID="pgfId-1069710"></A>
<A ID="43251"></A>
Removing Modifications to an Application</Heading-2>
<Body>
<A ID="pgfId-1069749"></A>
You can remove all of the modifications you made to an application in the <code>
/application/custom</code>
 directory by redeploying the application to another App Server.</Body>
<Body>
<A ID="pgfId-1069778"></A>
For example, to redeploy an existing application to a new App Server, named CleanApp, navigate to the Deploy page, select New App Server, enter the new name, and click Deploy:</Body>
<Body>
<A ID="pgfId-1069789"></A>
<IMAGE xml:link="simple" href="images/remove-mods.gif" show="embed" actuate="auto"/>
</Body>
</XML>

<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="overview.css" type="text/css" charset="UTF-8"?>
<XML>
<TITLE> </TITLE><Heading-1>
<A ID="pgfId-1043289"></A>
Overview of the Content Processing Framework</Heading-1>
<pagenum>
<A ID="pgfId-1043814"></A>
13</pagenum>
<Body>
<A ID="pgfId-1043291"></A>
Content processing applications often require multi-step processing. Each step in the process performs a particular task or set of tasks. The Content Processing Framework in MarkLogic Server supports these types of multi-step conversion processes. This chapter provides an overview of the framework. This chapter includes the following topics:</Body>
<Body-bullet>
<A ID="pgfId-1043639"></A>
<A href="overview.xml#id(70918)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Making Content More Useful</Hyperlink>
</A></Body-bullet>
<Body-bullet>
<A ID="pgfId-1044461"></A>
<A href="overview.xml#id(65621)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Access Internal and External Web Services</Hyperlink>
</A></Body-bullet>
<Body-bullet>
<A ID="pgfId-1048215"></A>
<A href="overview.xml#id(18243)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Components of the Content Processing Framework</Hyperlink>
</A></Body-bullet>
<Body-bullet>
<A ID="pgfId-1044407"></A>
<A href="overview.xml#id(81398)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Default Conversion Option</Hyperlink>
</A></Body-bullet>
<Body>
<A ID="pgfId-1048959"></A>
For instructions on installing the Default Conversion Option, which converts HTML, Adobe PDF, and Microsoft Office documents to XML, see <A href="default.xml#id(89015)" xml:link="simple" show="replace" actuate="user" CLASS="XRef">'Installing the Conversion Pipelines and Framework' on page&#160;49</A>. </Body>
<Heading-2>
<A ID="pgfId-1044336"></A>
<A ID="70918"></A>
Making Content More Useful</Heading-2>
<Body>
<A ID="pgfId-1048064"></A>
Content is information stored in a variety of forms. It could be stored on paper, in various proprietary electronic formats, or in XML format. For many businesses, content is their most valuable asset. In many cases, however, it is very difficult to extract information out of that content because of a variety of reasons, including:</Body>
<Body-bullet>
<A ID="pgfId-1048521"></A>
The content is difficult to access.</Body-bullet>
<Body-bullet>
<A ID="pgfId-1048522"></A>
It is difficult to compare with other content.</Body-bullet>
<Body-bullet>
<A ID="pgfId-1048529"></A>
You might not know the content exists.</Body-bullet>
<Body>
<A ID="pgfId-1048533"></A>
In short, it is difficult to get the most use out of the content that already exists. Content processing is a way to programmatically add value to your content by helping to alleviate some of these difficulties. </Body>
<Body>
<A ID="pgfId-1048539"></A>
The overall goal of content processing is to make your content more useful. Sometimes that means adding value to it by combining it with other content, and sometimes it means making it more accessible to more people. By moving the content through a series of content processing steps, you can add value to it at each step of the process.</Body>
<Heading-3>
<A ID="pgfId-1048394"></A>
Getting Your Content Into XML Format</Heading-3>
<Body>
<A ID="pgfId-1048395"></A>
In order to efficiently add value to your content, the first step is to get the content into a marked up XML format. In many cases the content is already in XML format, but sometimes it needs to undergo a conversion process to become XML. For example, if your content is in HTML, Microsoft Word, or Adobe PDF format, you can convert it to XML using the Default Conversion Option, as described in <A href="default.xml#id(64749)" xml:link="simple" show="replace" actuate="user" CLASS="XRef">'The Default Conversion Option' on page&#160;49</A>.</Body>
<Heading-3>
<A ID="pgfId-1048057"></A>
Striving For Clean, Well-Structured XML</Heading-3>
<Body>
<A ID="pgfId-1044413"></A>
One of the important requirements for building rich content applications is to have content that is in a well-structured XML format and is free from errors. Having well-structured XML allows you to easily build applications that can combine content from many documents to produce new and unique documents that are based on some dynamic criteria. In order to get well-structured XML, however, you typically have to perform some processing on the source content to transform it to XML, and then transform the XML to the structure you need. </Body>
<Body>
<A ID="pgfId-1044436"></A>
The requirements for content conversion and transformation are often very specific to an organization, and can require a custom solution. MarkLogic Server allows you to build custom pipelines that exactly match your specific requirements. The Content Processing Framework provides the tools needed to build your own custom pipeline.</Body>
<Heading-3>
<A ID="pgfId-1048385"></A>
Enriching Content With Semantic Tagging, Metadata, etc.</Heading-3>
<Body>
<A ID="pgfId-1048983"></A>
One way to make your content more useful is to add information to it. For example, you can add semantic tagging, which identifies and tags meaningful concepts within the content. The markup from the semantic tagging creates a more uniform target for search and retrieval applications. </Body>
<Body>
<A ID="pgfId-1049015"></A>
There are many web services designed to add semantic tagging to XML documents. For example, a web service might perform entity extraction on an XML document, which identifies people, places, and other entities within keywords in documents. You can write custom applications to add this type of functionality or you can use one of many third-party products and services, often available as web services, to supplement your existing content.</Body>
<Body>
<A ID="pgfId-1048560"></A>
You can also add metadata to the content. Metadata is any kind of information about the document. It can be simple, such as the date the document was created, or it can be more involved, such as information on how the document came into being. For example, MarkLogic Server includes options to maintain metadata (such as the last modified date) on documents, and the Default Conversion Option maintains metadata for all of the content it processes. </Body>
<Body>
<A ID="pgfId-1048561"></A>
The Content Processing Framework makes it easy to add these services as steps in your content processing application.</Body>
<Heading-2>
<A ID="pgfId-1044347"></A>
<A ID="65621"></A>
Access Internal and External Web Services</Heading-2>
<Body>
<A ID="pgfId-1044460"></A>
You can access web services, both within an intranet and anywhere across the internet, with the XQuery-level HTTP functions built into MarkLogic Server. The HTTP functions allow you to perform HTTP operations such as GET, PUT, POST, and DELETE. You can access these functions directly through XQuery, thus allowing you to post or get content from any HTTP server, including the ability to communicate with web services. The web services that you communicate with can perform external processing on your content, such as entity extraction, language translation, or some other custom processing. Combined with the conversion and HTML Tidy functions, the HTTP functions make it very easy to process any content you can get to on the web within MarkLogic Server.</Body>
<Body>
<A ID="pgfId-1044504"></A>
The XQuery-level HTTP functions can also be used directly with <code>
xdmp:document-load</code>
, <code>
xdmp:document-get</code>
, and all of the conversion functions. You can then, for example, directly process content extracted via HTTP from the web and process it with HTML Tidy (<code>
xdmp:tidy</code>
), load it into the database, or do anything you need to do with any content available via HTTP.</Body>
<Note>
<A ID="pgfId-1048748"></A>
MarkLogic Server requires all data to be in UTF-8 format. Therefore, any web services or HTTP services you access must return data UTF-8 format, or an error occurs.</Note>
<Heading-2>
<A ID="pgfId-1044693"></A>
<A ID="18243"></A>
Components of the Content Processing Framework</Heading-2>
<Body>
<A ID="pgfId-1048185"></A>
This section describes the components of the Content Processing Framework and includes the following sections:</Body>
<Body-bullet>
<A ID="pgfId-1048403"></A>
<A href="overview.xml#id(62368)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Domains</Hyperlink>
</A></Body-bullet>
<Body-bullet>
<A ID="pgfId-1048269"></A>
<A href="overview.xml#id(19478)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Pipelines</Hyperlink>
</A></Body-bullet>
<Body-bullet>
<A ID="pgfId-1048273"></A>
<A href="overview.xml#id(49604)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
XQuery Functions and Modules</Hyperlink>
</A></Body-bullet>
<Body-bullet>
<A ID="pgfId-1048631"></A>
<A href="overview.xml#id(77457)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Pre-Commit and Post-Commit Triggers</Hyperlink>
</A></Body-bullet>
<Body-bullet>
<A ID="pgfId-1048277"></A>
<A href="overview.xml#id(60118)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Creating Custom Applications With the Content Processing Framework</Hyperlink>
</A></Body-bullet>
<Heading-3>
<A ID="pgfId-1044728"></A>
<A ID="62368"></A>
Domains</Heading-3>
<Body>
<A ID="pgfId-1048405"></A>
A <Emphasis>
domain</Emphasis>
 defines a scope of documents to process. With domains, you can organize your content so that some documents are processed in one way and others are processed in another way. Domains provide flexibility in your content processing applications, making it easy to demarcate sets of documents to which you want to apply the same processing. For more details about domains, see <A href="domains.xml#id(11600)" xml:link="simple" show="replace" actuate="user" CLASS="XRef">'Understanding and Using Domains' on page&#160;14</A>.</Body>
<Heading-3>
<A ID="pgfId-1048404"></A>
<A ID="19478"></A>
Pipelines</Heading-3>
<Body>
<A ID="pgfId-1049050"></A>
A <Emphasis>
pipeline</Emphasis>
 is an XML document that describes a set of content processing steps. A pipeline defines the steps that occur during the processing of documents and defines actions that occur at each step. After each step, the document being processed is committed to the database, and the Content Processing Framework then catches this document change event with a trigger, which in turn can execute some more processing. This process continues for as many steps as you have defined in the pipeline. There are XQuery functions to help you define and install pipelines. For more details on pipelines, see <A href="pipelines.xml#id(80553)" xml:link="simple" show="replace" actuate="user" CLASS="XRef">'Understanding and Using Pipelines' on page&#160;19</A>.</Body>
<Heading-3>
<A ID="pgfId-1044398"></A>
<A ID="49604"></A>
XQuery Functions and Modules</Heading-3>
<Body>
<A ID="pgfId-1044401"></A>
As part of the Content Processing Framework, MarkLogic Server includes many XQuery functions and supporting XQuery modules. The following functions are built into MarkLogic Server; they support document conversion and other applications you can build with the Content Processing Framework:</Body>
<Body-bullet>
<A ID="pgfId-1044515"></A>
<code>
xdmp:pdf-convert</code>
</Body-bullet>
<Body-bullet>
<A ID="pgfId-1044519"></A>
<code>
xdmp:word-convert</code>
</Body-bullet>
<Body-bullet>
<A ID="pgfId-1044523"></A>
<code>
xdmp:excel-convert</code>
</Body-bullet>
<Body-bullet>
<A ID="pgfId-1044527"></A>
<code>
xdmp:powerpoint-convert</code>
</Body-bullet>
<Body-bullet>
<A ID="pgfId-1044500"></A>
<code>
xdmp:tidy</code>
</Body-bullet>
<Body-bullet>
<A ID="pgfId-1044536"></A>
<code>
xdmp:document-load</code>
</Body-bullet>
<Body-bullet>
<A ID="pgfId-1044540"></A>
<code>
xdmp:document-get</code>
</Body-bullet>
<Body-bullet>
<A ID="pgfId-1044544"></A>
<code>
xdmp:http-get</code>
</Body-bullet>
<Body-bullet>
<A ID="pgfId-1044554"></A>
<code>
xdmp:http-post</code>
</Body-bullet>
<Body-bullet>
<A ID="pgfId-1044558"></A>
<code>
xdmp:http-put</code>
</Body-bullet>
<Body-bullet>
<A ID="pgfId-1049064"></A>
<code>
xdmp:http-delete</code>
</Body-bullet>
<Body>
<A ID="pgfId-1049068"></A>
Additionally, there are XQuery modules to support the Content Processing Framework. Each module has XQuery functions designed to use in content processing applications. </Body>
<Body>
<A ID="pgfId-1048766"></A>
The following modules support the Content Processing Framework:</Body>
<Body-bullet>
<A ID="pgfId-1044575"></A>
Triggers</Body-bullet>
<Body-bullet>
<A ID="pgfId-1044581"></A>
Content Processing Framework</Body-bullet>
<Body-bullet>
<A ID="pgfId-1044580"></A>
Links</Body-bullet>
<Body-bullet>
<A ID="pgfId-1044582"></A>
Domains</Body-bullet>
<Body-bullet>
<A ID="pgfId-1044583"></A>
Pipelines</Body-bullet>
<Body>
<A ID="pgfId-1044576"></A>
These XQuery modules include the XQuery source code, so you can analyze them and use their functions in your own applications. The XQuery modules are installed into the following directory:</Body>
<Code>
<A ID="pgfId-1044589"></A>
&lt;<Emphasis>
install_dir</Emphasis>
&gt;/Modules/MarkLogic</Code>
<Body>
<A ID="pgfId-1048580"></A>
For details on these functions, see the <Emphasis>
MarkLogic XQuery and XSLT Function Reference</Emphasis>
.</Body>
<Note>
<A ID="pgfId-1048757"></A>
The convert functions and the conversion XQuery modules require the Default Conversion Option to run.</Note>
<Heading-3>
<A ID="pgfId-1048614"></A>
<A ID="77457"></A>
Pre-Commit and Post-Commit Triggers</Heading-3>
<Body>
<A ID="pgfId-1048618"></A>
MarkLogic Server and the Content Processing Framework use triggers to automate processes that are described by a pipeline. Triggers allow you to capture document events (create, update, delete, or property change) and system events (database online), and then perform some tasks after the event occurs. The tasks you perform are defined by an XQuery module, and can therefore be anything you can do in XQuery. The triggers capture the document change events for documents under a domain. Some of the triggers used by the Content Processing Framework are pre-commit triggers (that is, they execute <Emphasis>
before</Emphasis>
 the transaction completes) and some and are post-commit triggers (that is, they execute <Emphasis>
after</Emphasis>
 the transaction commits). When you construct pipelines for processing your content, triggers automate the transitions between stages of the pipeline. For more details about triggers, see the chapter on triggers in the <Emphasis>
Application Developer's Guide</Emphasis>
.</Body>
<Heading-3>
<A ID="pgfId-1044385"></A>
<A ID="60118"></A>
Creating Custom Applications With the Content Processing Framework</Heading-3>
<Body>
<A ID="pgfId-1035177"></A>
The Content Processing Framework is designed for creating your own content processing applications, with your own content processing code, and with pipelines that follow your own logical and business processes. </Body>
<Body>
<A ID="pgfId-1048823"></A>
For more details on creating custom applications, see <A href="custom.xml#id(52182)" xml:link="simple" show="replace" actuate="user" CLASS="XRef">'Using the Framework to Create Custom Applications' on page&#160;35</A>.</Body>
<Body>
<A ID="pgfId-1048692"></A>
For details on creating custom applications with the Content Processing Framework, see <A href="custom.xml#id(52182)" xml:link="simple" show="replace" actuate="user" CLASS="XRef">'Using the Framework to Create Custom Applications' on page&#160;35</A>.</Body>
<Heading-2>
<A ID="pgfId-1048223"></A>
<A ID="81398"></A>
Default Conversion Option</Heading-2>
<Body>
<A ID="pgfId-1048227"></A>
The Default Conversion Option includes features to perform the following types of document conversion:</Body>
<Body-bullet>
<A ID="pgfId-1048231"></A>
<A href="overview.xml#id(61589)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Microsoft Office and Adobe PDF Conversion</Hyperlink>
</A></Body-bullet>
<Body-bullet>
<A ID="pgfId-1048235"></A>
<A href="overview.xml#id(73708)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
HTML Conversion and Enrichment</Hyperlink>
</A></Body-bullet>
<Body>
<A ID="pgfId-1048241"></A>
For details on the Default Conversion Option, see <A href="default.xml#id(64749)" xml:link="simple" show="replace" actuate="user" CLASS="XRef">'The Default Conversion Option' on page&#160;49</A>.</Body>
<Heading-3>
<A ID="pgfId-1048244"></A>
<A ID="61589"></A>
Microsoft Office and Adobe PDF Conversion</Heading-3>
<Body>
<A ID="pgfId-1048245"></A>
Included with the Default Conversion Option is the ability to convert Microsoft Word, Excel, and Powerpoint documents, as well as Adobe PDF documents, to XML. You can access this functionality directly through XQuery. The Default Conversion Option, which is written in XQuery, uses the conversion functions to do the initial conversion to XML from Adobe PDF and Microsoft Office documents.</Body>
<Note>
<A ID="pgfId-1048246"></A>
The Default Conversion Option requires Microsoft Office documents to be Office&#160;97 or newer format; it does not convert Office 95 documents or older documents. </Note>
<Heading-3>
<A ID="pgfId-1048251"></A>
<A ID="73708"></A>
HTML Conversion and Enrichment</Heading-3>
<Body>
<A ID="pgfId-1048252"></A>
HTML documents contain HTML markup, but are not required to be well-formed and are not XML. XHTML is an XML version of HTML that requires well-formed tags, is case-sensitive for the element and attribute names, and is more strict in its structured requirements than HTML. </Body>
<Body>
<A ID="pgfId-1049110"></A>
MarkLogic Server includes an implementation of HTML Tidy, which is an open source project (<Hyperlink>
<A href="http://tidy.sourceforge.net/" xml:link="simple" show="replace" actuate="user" CLASS="URL">http://tidy.sourceforge.net/</A></Hyperlink>
) that allows you to take any HTML document and convert it to well-formed XHTML. This provides XQuery-level access to Tidy, with the processing done natively within MarkLogic Server.</Body>
<Body>
<A ID="pgfId-1048871"></A>
In addition to simply converting the HTML documents to XHTML, the XHTML is significantly enriched, improving its structure. The enriched structure makes it easier to create robust applications with the content.</Body>
</XML>

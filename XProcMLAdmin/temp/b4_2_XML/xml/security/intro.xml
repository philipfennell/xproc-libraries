<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="intro.css" type="text/css" charset="UTF-8"?>
<XML>
<TITLE> </TITLE><Heading-1>
<A ID="pgfId-1043289"></A>
<A ID="99212"></A>
Introduction to Security</Heading-1>
<pagenum>
<A ID="pgfId-1044969"></A>
11</pagenum>
<Body>
<A ID="pgfId-1043291"></A>
Whenever you create systems that store and retrieve data, the importance of providing secure access to the data and of having a fine level of control over such data access becomes clear the first time a user needs to access the data. Does this user have the proper authority to see the data? Should the user be able to load new data or update existing data in the system? Questions like these (and their answers) are necessary to provide the basis for the security requirements for your application. </Body>
<Body>
<A ID="pgfId-1044134"></A>
MarkLogic Server includes a powerful role-based security model which has the flexibility to protect your data according to your application security requirements. There is always a trade-off between security and usability. If a system has no security, then it is open to malicious or unmalicious unauthorized access; if a system is too locked down, however, then it might become too difficult (or impossible) for the people who need to use it. Before implementing your application security model, it is very important to understand the core concepts and features in the MarkLogic Server security model. This chapter introduces those concepts and includes the following sections:</Body>
<Body-bullet>
<A ID="pgfId-1044143"></A>
<A href="intro.xml#id(60603)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Security Overview</Hyperlink>
</A></Body-bullet>
<Body-bullet>
<A ID="pgfId-1044153"></A>
<A href="intro.xml#id(62341)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Components of the Security Model</Hyperlink>
</A></Body-bullet>
<Body-bullet>
<A ID="pgfId-1044165"></A>
<A href="intro.xml#id(52093)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Terminology</Hyperlink>
</A></Body-bullet>
<Heading-2>
<A ID="pgfId-1043293"></A>
<A ID="60603"></A>
Security Overview</Heading-2>
<Body>
<A ID="pgfId-1044100"></A>
This section provides an overview of the three main principles used in security in a MarkLogic Server database:</Body>
<Body-bullet>
<A ID="pgfId-1044104"></A>
<A href="intro.xml#id(32461)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Authentication</Hyperlink>
</A></Body-bullet>
<Body-bullet>
<A ID="pgfId-1044112"></A>
<A href="intro.xml#id(76601)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Authorization</Hyperlink>
</A></Body-bullet>
<Body-bullet>
<A ID="pgfId-1044117"></A>
<A href="intro.xml#id(57685)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Administration</Hyperlink>
</A></Body-bullet>
<Heading-3>
<A ID="pgfId-1043888"></A>
<A ID="32461"></A>
Authentication</Heading-3>
<Body>
<A ID="pgfId-1044099"></A>
<Emphasis>
Authentication</Emphasis>
 is the process of verifying user credentials for a named user. In other words, authentication makes sure you are who you say you are. Users are typically authenticated with a username and password. Every request to MarkLogic Server is issued from an authenticated user. There are several ways to set up server authentication in MarkLogic Server. Authentication simply verifies user credentials and associates that session with the authenticated user; it does not grant any access or authority to perform any actions on the system. For details on authentication, see <A href="authentication.xml#id(63031)" xml:link="simple" show="replace" actuate="user" CLASS="XRef">'Users and Authentication' on page&#160;30</A>.</Body>
<Heading-3>
<A ID="pgfId-1043893"></A>
<A ID="76601"></A>
Authorization</Heading-3>
<Body>
<A ID="pgfId-1044189"></A>
<Emphasis>
Authorization</Emphasis>
 provides the mechanism to control document access, XQuery code execution, and document creation. In other words, given the user who you are authenticated as, authorization allows the system to control what you are allowed to do. For example, authorization is the process that can allow the user named <Emphasis>
Melanie</Emphasis>
 to be able to read and update a document, the user named <Emphasis>
Roger</Emphasis>
 to only be able to read the document, and the user named <Emphasis>
Hal</Emphasis>
 to not even have access to the document. Authorization is used to protect documents and to protect the execution of XQuery code. For details on authorization in MarkLogic Server, see <A href="permissions.xml#id(47015)" xml:link="simple" show="replace" actuate="user" CLASS="XRef">'URI Privileges and Permissions on Documents' on page&#160;18</A> and <A href="execute.xml#id(12789)" xml:link="simple" show="replace" actuate="user" CLASS="XRef">'Execute Privileges and Amps' on page&#160;27</A>.</Body>
<Heading-3>
<A ID="pgfId-1044211"></A>
<A ID="57685"></A>
Administration</Heading-3>
<Body>
<A ID="pgfId-1044212"></A>
<Emphasis>
Administration</Emphasis>
 is the process of defining users, roles, privileges, and permissions to set up your security policies. Administration is used to create and manage the objects used in authentication and authorization. For details on how security administration works in MarkLogic Server, see <A href="intro.xml#id(68781)" xml:link="simple" show="replace" actuate="user" CLASS="XRef">'Security Administration With the Admin Interface and XQuery Functions' on page&#160;10</A> and the <Emphasis>
Administrator's Guide</Emphasis>
.</Body>
<Heading-2>
<A ID="pgfId-1044214"></A>
<A ID="62341"></A>
Components of the Security Model</Heading-2>
<Body>
<A ID="pgfId-1044243"></A>
The MarkLogic Server security model is very flexible, allowing you to set up application security with the level of granularity dictated by your security requirements. The security model has the following components:</Body>
<Body-bullet>
<A ID="pgfId-1044248"></A>
<A href="intro.xml#id(29542)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Role-Based Security Model (Authorization)</Hyperlink>
</A></Body-bullet>
<Body-bullet>
<A ID="pgfId-1044259"></A>
<A href="intro.xml#id(20175)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Access Control With the Security Database</Hyperlink>
</A></Body-bullet>
<Body-bullet>
<A ID="pgfId-1044264"></A>
<A href="intro.xml#id(68781)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Security Administration With the Admin Interface and XQuery Functions</Hyperlink>
</A></Body-bullet>
<Heading-3>
<A ID="pgfId-1043867"></A>
<A ID="29542"></A>
Role-Based Security Model (Authorization)</Heading-3>
<Body>
<A ID="pgfId-1044268"></A>
Roles are the central point of authorization in the MarkLogic Server security model. Privileges, users, other roles, and document permissions all point to roles. The following figure shows how each of these entities points into one or more roles.</Body>
<Body>
<A ID="pgfId-1044287"></A>
<IMAGE xml:link="simple" href="intro-1.gif" show="embed" actuate="auto"/>
</Body>
<Body>
<A ID="pgfId-1044284"></A>
Privileges are assigned zero or more roles, roles are assigned to zero or more other roles, and users are assigned to zero or more roles. Documents are assigned permissions based on roles and capabilities (<code>
read</code>
, <code>
insert</code>
, <code>
update</code>
, <code>
execute</code>
). Users inherit the sum of all of the privileges and permissions from their roles.</Body>
<Body>
<A ID="pgfId-1044272"></A>
There are two types of privileges: URI privileges and execute privileges. URI privileges are used to control the creation of documents with certain URIs. Execute privileges are used to protect the execution of functions in XQuery code. A privilege is like a door and, when the door is locked, you need to have the key to the door in order to open it. If the door is unlocked (no privileges), then you can walk right through. The keys to the doors are distributed to users through roles; that is, if a user inherits a privilege through the set of roles to which she is assigned, then she has the keys to unlock those inherited privileges. </Body>
<Body>
<A ID="pgfId-1044897"></A>
Permissions are used to protect documents. Documents are assigned permissions, either at load time or as a separate administrative action. Each permission is a combination of a role and a capability (<code>
read</code>
, <code>
insert</code>
, <code>
update</code>
, <code>
execute</code>
). </Body>
<Body>
<A ID="pgfId-1044975"></A>
<IMAGE xml:link="simple" href="intro-2.gif" show="embed" actuate="auto"/>
</Body>
<Body>
<A ID="pgfId-1044976"></A>
Users assigned the role corresponding to the permission have the ability to perform the capability. You can set any number of permissions on a document.</Body>
<Body>
<A ID="pgfId-1044876"></A>
For more details on how roles work in MarkLogic Server, see <A href="role.xml#id(78081)" xml:link="simple" show="replace" actuate="user" CLASS="XRef">'Roles and the Role-Based Security Model' on page&#160;12</A>. For more details on privileges and permissions, see <A href="permissions.xml#id(47015)" xml:link="simple" show="replace" actuate="user" CLASS="XRef">'URI Privileges and Permissions on Documents' on page&#160;18</A>.</Body>
<Heading-3>
<A ID="pgfId-1043832"></A>
<A ID="20175"></A>
Access Control With the Security Database</Heading-3>
<Body>
<A ID="pgfId-1043843"></A>
The <Emphasis>
security database</Emphasis>
 is a MarkLogic Server database in which the user data, privilege data, role data, and other security information is stored. Each database in MarkLogic Server references a security database. A database named <Emphasis>
Security</Emphasis>
 is created as part of the installation process, and the <Emphasis>
Security</Emphasis>
 database functions as the default security database. </Body>
<Body>
<A ID="pgfId-1045138"></A>
The following figure shows that many databases can reference the same security database for authentication and authorization.</Body>
<Body>
<A ID="pgfId-1044930"></A>
<IMAGE xml:link="simple" href="intro-3.gif" show="embed" actuate="auto"/>
The security database is accessed to authenticate users and to control access to documents. For details on authentication, the security database, and ways to administer objects in the security database, see <A href="authentication.xml#id(63031)" xml:link="simple" show="replace" actuate="user" CLASS="XRef">'Users and Authentication' on page&#160;30</A> and <A href="security_db.xml#id(66642)" xml:link="simple" show="replace" actuate="user" CLASS="XRef">'Administering Security' on page&#160;32</A>.</Body>
<Heading-3>
<A ID="pgfId-1043842"></A>
<A ID="68781"></A>
Security Administration With the Admin Interface and XQuery Functions </Heading-3>
<Body>
<A ID="pgfId-1043845"></A>
MarkLogic Server administrators are privileged users who have the authority to perform tasks such as creating/deleting/modifying users, roles, privileges, and so on. These tasks change or add data in the security database. Users who perform these tasks must have the <code>
security</code>
 role, either explicitly or by inheriting it from another role (for example, from the <code>
admin</code>
 role). Typically, users who perform these tasks have the <code>
admin</code>
 role, which provides the authority to perform any tasks in the database. Use caution when assigning users to the <code>
security</code>
 and/or <code>
admin</code>
 roles; users who belong to the <code>
admin</code>
 role can perform any task on the system, including deleting data.</Body>
<Body>
<A ID="pgfId-1044939"></A>
There are two main ways to administer security in MarkLogic Server: using the Admin interface and using the XQuery functions supplied to administer security. For details on administering security, see <A href="security_db.xml#id(66642)" xml:link="simple" show="replace" actuate="user" CLASS="XRef">'Administering Security' on page&#160;32</A>.</Body>
<Heading-2>
<A ID="pgfId-1043844"></A>
<A ID="52093"></A>
Terminology</Heading-2>
<Body>
<A ID="pgfId-1043997"></A>
This section defines the following terms, which are used throughout the security documentation:</Body>
<Body-bullet>
<A ID="pgfId-1043998"></A>
<A href="intro.xml#id(30113)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
User</Hyperlink>
</A></Body-bullet>
<Body-bullet>
<A ID="pgfId-1044013"></A>
<A href="intro.xml#id(76278)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Role</Hyperlink>
</A></Body-bullet>
<Body-bullet>
<A ID="pgfId-1044018"></A>
<A href="intro.xml#id(41825)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Execute Privilege</Hyperlink>
</A></Body-bullet>
<Body-bullet>
<A ID="pgfId-1044023"></A>
<A href="intro.xml#id(41609)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
URI Privilege</Hyperlink>
</A></Body-bullet>
<Body-bullet>
<A ID="pgfId-1044028"></A>
<A href="intro.xml#id(63950)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Permission</Hyperlink>
</A></Body-bullet>
<Heading-3>
<A ID="pgfId-1043954"></A>
<A ID="30113"></A>
User</Heading-3>
<Body>
<A ID="pgfId-1044033"></A>
A <Emphasis>
user</Emphasis>
 is a named entity used to authenticate a request to an HTTP, WebDAV, or XDBC server. For details on users, see <A href="authentication.xml#id(63031)" xml:link="simple" show="replace" actuate="user" CLASS="XRef">'Users and Authentication' on page&#160;30</A>.</Body>
<Heading-3>
<A ID="pgfId-1043958"></A>
<A ID="76278"></A>
Role</Heading-3>
<Body>
<A ID="pgfId-1044040"></A>
A <Emphasis>
role</Emphasis>
 is a named entity that provides authorization privileges and permissions to other roles or to users. Roles can include assignments to other roles (which can in turn include assignments to other roles, and so on). Roles are the fundamental building block with which you build your security policies. For details on roles, see <A href="role.xml#id(78081)" xml:link="simple" show="replace" actuate="user" CLASS="XRef">'Roles and the Role-Based Security Model' on page&#160;12</A>.</Body>
<Heading-3>
<A ID="pgfId-1043962"></A>
<A ID="41825"></A>
Execute Privilege</Heading-3>
<Body>
<A ID="pgfId-1044047"></A>
An <Emphasis>
execute privilege</Emphasis>
 provides the authority to perform a protected action. Examples of protected actions are the ability to execute a specific user-defined function, the ability to execute a built-in function (for example, <code>
xdmp:document-insert</code>
), and so on. For details on execute privileges, see <A href="execute.xml#id(12789)" xml:link="simple" show="replace" actuate="user" CLASS="XRef">'Execute Privileges and Amps' on page&#160;27</A>.</Body>
<Heading-3>
<A ID="pgfId-1043966"></A>
<A ID="41609"></A>
URI Privilege</Heading-3>
<Body>
<A ID="pgfId-1044053"></A>
A <Emphasis>
URI privilege</Emphasis>
 provides the authority to create documents within a base URI. When a URI privilege exists for a base URI, only users with roles assigned to the URI privilege can create documents with URIs starting with the base string. For details on URI privileges, see <A href="permissions.xml#id(47015)" xml:link="simple" show="replace" actuate="user" CLASS="XRef">'URI Privileges and Permissions on Documents' on page&#160;18</A>.</Body>
<Heading-3>
<A ID="pgfId-1043970"></A>
<A ID="63950"></A>
Permission</Heading-3>
<Body>
<A ID="pgfId-1044073"></A>
A <Emphasis>
permission</Emphasis>
 provides a role with the capability to perform certain capabilities (<code>
read</code>
, <code>
insert</code>
, <code>
update</code>
, <code>
execute</code>
) on a document or a collection. Permissions are assigned to documents and collections. For details on permissions, see <A href="permissions.xml#id(47015)" xml:link="simple" show="replace" actuate="user" CLASS="XRef">'URI Privileges and Permissions on Documents' on page&#160;18</A>.</Body>
<Body>
<A ID="pgfId-1035177"></A>
</Body>
</XML>

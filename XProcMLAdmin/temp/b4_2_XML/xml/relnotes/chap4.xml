<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="chap4.css" type="text/css" charset="UTF-8"?>
<XML>
<TITLE> </TITLE><Heading-1>
<A ID="pgfId-1040610"></A>
<A ID="_Toc71544047"></A>
Known Incompatibilities with Previous Releases</Heading-1>
<pagenum>
<A ID="pgfId-1043803"></A>
28</pagenum>
<Body>
<A ID="pgfId-1043807"></A>
The vast majority of applications implemented on MarkLogic Server 4.1-* will run either without modifications or with very minor modifications in Release 4.2. There are, however, a number of changes that will cause compatibility issues with 4.1 applications. This section describes those incompatibilities and includes the following topics:</Body>
<Body-bullet>
<A ID="pgfId-1056357"></A>
<A href="chap4.xml#id(83980)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Search Incompatibilities</Hyperlink>
</A></Body-bullet>
<Body-bullet>
<A ID="pgfId-1056365"></A>
<A href="chap4.xml#id(64389)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Unicode Table Updated</Hyperlink>
</A></Body-bullet>
<Body-bullet>
<A ID="pgfId-1056373"></A>
<A href="chap4.xml#id(35448)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
XCC Jar Filed Renamed With Version Number</Hyperlink>
</A></Body-bullet>
<Body-bullet>
<A ID="pgfId-1056381"></A>
<A href="chap4.xml#id(59024)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
New mimetypes Should be Merged if You Have Customized Mimetypes</Hyperlink>
</A></Body-bullet>
<Body-bullet>
<A ID="pgfId-1057209"></A>
<A href="chap4.xml#id(40996)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Default XML Serialization Changes for boundary-space and Indenting</Hyperlink>
</A></Body-bullet>
<Body-bullet>
<A ID="pgfId-1057740"></A>
<A href="chap4.xml#id(32685)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Signature Change for admin:database-geospatial-element-index and admin:database-geospatial-element-child-index</Hyperlink>
</A></Body-bullet>
<Body-bullet>
<A ID="pgfId-1057878"></A>
<A href="chap4.xml#id(73458)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Set Journaling on Shared-Disk Failover Databases to Strict</Hyperlink>
</A></Body-bullet>
<Body-bullet>
<A ID="pgfId-1058063"></A>
<A href="chap4.xml#id(46877)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Linux Requirements Change</Hyperlink>
</A></Body-bullet>
<Body-bullet>
<A ID="pgfId-1056389"></A>
<A href="chap4.xml#id(99198)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Upgrade and Reindex Required</Hyperlink>
</A></Body-bullet>
<Body-bullet>
<A ID="pgfId-1057468"></A>
<A href="chap4.xml#id(58795)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Incompatibilities Between 4.0 and 4.1</Hyperlink>
</A></Body-bullet>
<Heading-2>
<A ID="pgfId-1056441"></A>
<A ID="83980"></A>
Search Incompatibilities</Heading-2>
<Body>
<A ID="pgfId-1056442"></A>
Most search code will function identically in 4.2 as it did in 4.1, but there are a few cases where the behavior might be slightly different. This section describes the incompatibilities in search features between 4.1 and 4.2, and includes the following incompatibilities:</Body>
<Body-bullet>
<A ID="pgfId-1056823"></A>
<A href="chap4.xml#id(38312)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Scores of Searches With cts:properties-query Matches are Higher</Hyperlink>
</A></Body-bullet>
<Body-bullet>
<A ID="pgfId-1056848"></A>
<A href="chap4.xml#id(93258)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
cts:contains Queries with a cts:properties-query and a Range Query Now Require the Needed Indexes</Hyperlink>
</A></Body-bullet>
<Body-bullet>
<A ID="pgfId-1056859"></A>
<A href="chap4.xml#id(26694)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Default cts:near-query Distance Now 10</Hyperlink>
</A></Body-bullet>
<Body-bullet>
<A ID="pgfId-1057123"></A>
<A href="chap4.xml#id(63007)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
cts:train Uses Different Default Terms</Hyperlink>
</A></Body-bullet>
<Heading-3>
<A ID="pgfId-1056467"></A>
<A ID="38312"></A>
Scores of Searches With cts:properties-query Matches are Higher</Heading-3>
<Body>
<A ID="pgfId-1056488"></A>
Searches that match a <code>
cts:properties-query</code>
 in a <code>
cts:and-query</code>
 will have higher scores than in 4.1. In 4.2, the score contributions of the <code>
cts:properties-query</code>
 and the other <code>
cts:query</code>
 constructors that operate on the document are added together, whereas in 4.1 the score was the maximum of the property and document scores.</Body>
<Heading-3>
<A ID="pgfId-1056514"></A>
<A ID="93258"></A>
cts:contains Queries with a cts:properties-query and a Range Query Now Require the Needed Indexes</Heading-3>
<Body>
<A ID="pgfId-1056530"></A>
If you have an expression that uses <code>
cts:contains</code>
 with a <code>
cts:properties-query</code>
 (or a <code>
cts:document-fragment-query</code>
), those expressions will now use the indexes to perform index resolution. Therefore, any <code>
cts:query</code>
 constructors used with <code>
cts:properties-query</code>
 or <code>
cts:document-fragment-query</code>
 will throw an exception if any needed indexes are not available. For example, the following query will now throw an exception if there is no range index on the element <code>
my-element</code>
:</Body>
<Code>
<A ID="pgfId-1056562"></A>
cts:contains(//a, cts:properties-query(
&#160;&#160;&#160;cts:element-range-query(xs:QName(&quot;my-element&quot;), &quot;=&quot;, &quot;my-value&quot;)))</Code>
<Body>
<A ID="pgfId-1056591"></A>
In 4.1, this query would complete even if there was no range index, but it would have to gather all of the needed fragments in order to perform the <code>
cts:properties-query</code>
.</Body>
<Heading-3>
<A ID="pgfId-1056700"></A>
<A ID="26694"></A>
Default cts:near-query Distance Now 10</Heading-3>
<Body>
<A ID="pgfId-1057146"></A>
The default distance for <code>
cts:near-query</code>
 is now 10. Previously, the default was 100. If your applications use <code>
cts:near-query</code>
 without specifying a <code>
$distance</code>
 parameter, they will only match words within a 10 word distance by default. If you want them to match according to the old 100 word value, you must add a value of 100 to the <code>
$distance</code>
 parameter.</Body>
<Heading-3>
<A ID="pgfId-1057153"></A>
<A ID="63007"></A>
cts:train Uses Different Default Terms</Heading-3>
<Body>
<A ID="pgfId-1057163"></A>
The default database terms that <code>
cts:train</code>
 uses have changed in 4.2. In 4.2, the defaults are <code>
db:stemmed-searches</code>
, <code>
db:fast-phrase-searches</code>
, <code>
db:fast-element-word-searches</code>
, and <code>
db:fast-element-phrase-searches</code>
. In 4.1, the default was only <code>
db:word-searches</code>
. If you want the same behavior as 4.1, you can modify the options to <code>
cts:train</code>
 to use <code>
db:word-searches</code>
. For most data, however, the new defaults should give better classifications.</Body>
<Heading-2>
<A ID="pgfId-1057148"></A>
<A ID="64389"></A>
Unicode Table Updated</Heading-2>
<Body>
<A ID="pgfId-1056646"></A>
The Unicode table has been updated to the following Unicode character mappings:</Body>
<Body-indent>
<A ID="pgfId-1056653"></A>
<Hyperlink>
<A href="http://unicode.org/versions/Unicode5.2.0/" xml:link="simple" show="replace" actuate="user" CLASS="URL">http://unicode.org/versions/Unicode5.2.0/</A></Hyperlink>
</Body-indent>
<Body>
<A ID="pgfId-1056660"></A>
These are minor changes, but they might cause some minor incompatibilities in applications where a character was mapped to one set before and is mapped to another set now. For example, it can cause some regular expressions that matched before to not match now, or vice-versa. </Body>
<Heading-2>
<A ID="pgfId-1056635"></A>
<A ID="35448"></A>
XCC Jar Filed Renamed With Version Number</Heading-2>
<Body>
<A ID="pgfId-1056628"></A>
The XCC jar files, used for Java client programs to connect to MarkLogic Server, now include the version number as part of the file name. The names are of the form <code>
marklogic-xcc-4.2.1.jar</code>
. Previously, the jar files were all named <code>
xcc.jar</code>
, regardless of the version. When you use the new jar file in your existing java programs, you will have to either rename the jar file before copying it to your application or modify the Java startup scripts to use the new name.</Body>
<Heading-2>
<A ID="pgfId-1056617"></A>
<A ID="59024"></A>
New mimetypes Should be Merged if You Have Customized Mimetypes</Heading-2>
<Body>
<A ID="pgfId-1056753"></A>
MarkLogic Server 4.2 includes the following new mimetype values:</Body>
<TableAnchor>
<A ID="pgfId-1056923"></A>
</TableAnchor>
<TABLE>
<ROW>
<TH ROWSPAN="1" COLSPAN="1">
<CellHeading>
<A ID="pgfId-1056940"></A>
Name</CellHeading>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<CellHeading>
<A ID="pgfId-1056942"></A>
Extensions</CellHeading>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<CellHeading>
<A ID="pgfId-1056944"></A>
Format</CellHeading>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<CellHeading>
<A ID="pgfId-1056946"></A>
Description</CellHeading>
</TH>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<A ID="pgfId-1056948"></A>
<code>
application/atom+xml</code>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<A ID="pgfId-1056950"></A>
N/A</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<A ID="pgfId-1056952"></A>
<code>
xml</code>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<A ID="pgfId-1056954"></A>
Mimetype for Atom Feeds.</CellBody>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<A ID="pgfId-1056956"></A>
<code>
text/cache-manifest</code>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<A ID="pgfId-1056958"></A>
<code>
manifest</code>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<A ID="pgfId-1056960"></A>
<code>
text</code>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<A ID="pgfId-1056962"></A>
Mimetype for cached manifest files for offline web applications.</CellBody>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<A ID="pgfId-1056964"></A>
<code>
text/csv</code>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<A ID="pgfId-1056966"></A>
<code>
csv</code>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<A ID="pgfId-1056968"></A>
<code>
text</code>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<A ID="pgfId-1056970"></A>
Mimetype for comma separated value files.</CellBody>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<A ID="pgfId-1056972"></A>
<code>
text/html-sandboxed</code>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<A ID="pgfId-1056974"></A>
<code>
sandboxed</code>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<A ID="pgfId-1056976"></A>
<code>
text</code>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<A ID="pgfId-1056978"></A>
Mimetype for sandboxed html files.</CellBody>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<A ID="pgfId-1056980"></A>
<code>
text/ping</code>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<A ID="pgfId-1056982"></A>
N/A</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<A ID="pgfId-1056984"></A>
<code>
text</code>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<A ID="pgfId-1056986"></A>
Mimetype for ping feeds.</CellBody>
</CELL>
</ROW>
</TABLE>
<Body>
<A ID="pgfId-1056930"></A>
If you upgraded to 4.2 from a previous version of MarkLogic Server and if you have ever customized your mimetypes (for example, using the MIME Types Configuration page of the Admin Interface), the upgrade will not automatically add the new mimetypes to your configuration. If you have not added any mimetypes, then the new mimetypes will be automatically added during the upgrade. You can check if you have these mimetypes configured by going to the Mimetype page of the Admin Interface and checking if the above mimetypes exist. If they do, then there is nothing you need to do.</Body>
<Body>
<A ID="pgfId-1057052"></A>
If you do not have the above mimetypes after upgrading to 4.2, you can manually add the mimetypes to your configuration using the Admin Interface. To manually add the configuration, perform the following:</Body>
<Number1>
<A ID="pgfId-1056768"></A>
Open the Admin Interface in a browser (for example, open http://localhost:8001).</Number1>
<NumberList>
<Number>
<A ID="pgfId-1056778"></A>
Navigate to the Mimetypes page, near the bottom of the tree menu.</Number>
<Number>
<A ID="pgfId-1056787"></A>
Click the Create tab.</Number>
<Number>
<A ID="pgfId-1056794"></A>
Enter the name,the extension, and the format for the mimetype (see the table above).</Number>
<Number>
<A ID="pgfId-1056801"></A>
Click OK.</Number>
<Number>
<A ID="pgfId-1057080"></A>
Repeat the preceding steps for each mimetype in the above table.</Number>
</NumberList>
<Heading-2>
<A ID="pgfId-1056742"></A>
<A ID="40996"></A>
Default XML Serialization Changes for boundary-space and Indenting</Heading-2>
<Body>
<A ID="pgfId-1058125"></A>
The default serialization of XML in XQuery has changed in 4.2. In 4.2, the default is to preserve boundary whitespace and to indent new elements. This differs from the 4.1 behavior, which was to preserve boundary space and to not indent new lines.</Body>
<Body>
<A ID="pgfId-1058126"></A>
In 4.2, you can control the serialization of an XQuery program by adding options to the XQuery prolog. To get the 4.1 behavior in 4.2, add the following to the prolog:</Body>
<Code>
<A ID="pgfId-1057261"></A>
declare boundary-space preserve ;
declare option xdmp:output &quot;indent=no&quot; ; </Code>
<Body>
<A ID="pgfId-1057250"></A>
You can run a query with these options in 4.1 as well, but they will have no effect. Therefore if you have code that you want to run the same in both 4.1 and 4.2, you can safely add these options to the prolog. </Body>
<Note>
<A ID="pgfId-1058131"></A>
If you are using CQ, the <code>
xdmp:output</code>
 options will use the defaults (because it performs an <code>
xdmp:eval</code>
 of your query); to see the results of the <code>
xdmp:output</code>
 options, evaluate the query directly against an App Server.</Note>
<Body>
<A ID="pgfId-1057281"></A>
For example, the following shows the output of several queries in 4.1 and 4.2:</Body>
<Code>
<A ID="pgfId-1057444"></A>
(: in 4.2 :)
xquery version &quot;1.0-ml&quot; ;

&lt;test&gt;
  &lt;indented&gt;hello&lt;/indented&gt;&lt;not/&gt;&lt;/test&gt;
=&gt;
&lt;test&gt;
  &lt;indented&gt;hello&lt;/indented&gt;
  &lt;not/&gt;
&lt;/test&gt;</Code>
<Code>
<A ID="pgfId-1057390"></A>
(: in 4.2 :)
xquery version &quot;1.0-ml&quot; ;
declare boundary-space preserve ;
declare option xdmp:output &quot;indent=no&quot; ; 

&lt;test&gt;
  &lt;indented&gt;hello&lt;/indented&gt;&lt;not/&gt;&lt;/test&gt;
=&gt;
&lt;test&gt;
  &lt;indented&gt;hello&lt;/indented&gt;
  &lt;not/&gt;
&lt;/test&gt;</Code>
<Code>
<A ID="pgfId-1057301"></A>
(: in 4.2 and 4.1 :)
xquery version &quot;1.0-ml&quot; ;
declare boundary-space preserve ;
declare option xdmp:output &quot;indent=no&quot; ; 

&lt;test&gt;
  &lt;indented&gt;hello&lt;/indented&gt;&lt;not/&gt;&lt;/test&gt;</Code>
<Heading-2>
<A ID="pgfId-1057220"></A>
<A ID="32685"></A>
Signature Change for admin:database-geospatial-element-index and admin:database-geospatial-element-child-index</Heading-2>
<Body>
<A ID="pgfId-1057782"></A>
The signature has changed for the following functions in the Admin API:</Body>
<Body-bullet>
<A ID="pgfId-1057789"></A>
<code>
admin:database-geospatial-element-index</code>
</Body-bullet>
<Body-bullet>
<A ID="pgfId-1057823"></A>
<code>
admin:database-geospatial-element-child-index</code>
</Body-bullet>
<Body>
<A ID="pgfId-1057809"></A>
The order of the last 2 arguments, and the <code>
$point-format</code>
 argument is now last and is optional. If you have code that uses either of these functions, then see the function signatures in <Emphasis>
MarkLogic XQuery and XSLT Function Reference</Emphasis>
 and determine if you need to change your code. If you use the <code>
$point-format</code>
 argument, you will need to change the order of the last 2 arguments.</Body>
<Heading-2>
<A ID="pgfId-1057998"></A>
<A ID="73458"></A>
Set Journaling on Shared-Disk Failover Databases to Strict</Heading-2>
<Body>
<A ID="pgfId-1057999"></A>
In 4.2, there are two types of failover: shared-disk failover and local-disk failover. Shared-disk failover is the same as the failover available in 4.1. In 4.1, failover forests always use the <code>
journaling</code>
 database option of <code>
strict</code>
, but you cannot manually set the journaling option in 4.1. In 4.2, MarkLogic Server allows you to manually set the <code>
journaling</code>
 option at the database level, but the default is <code>
fast</code>
. If you are upgrading from 4.1 to 4.2 and are using failover (shared-disk failover, which was available in 4.1), to have the same behavior as 4.1, you should change the database option for <code>
journaling</code>
 on any databases in which you have failover forests configured to <code>
strict</code>
. If you leave the option at the default of <code>
fast</code>
, your system will be protected against the MarkLogic Server process going down during transactions, but not protect against the computer going down. </Body>
<Body>
<A ID="pgfId-1058008"></A>
For details on the journaling settings, see <A href="../dev_guide/loading.xml#id(19846)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Understanding the Locking and Journaling Database Settings for Bulk Loads</Hyperlink>
</A> in the <Emphasis>
Application Developer's Guide</Emphasis>
. For details on failover, see <Emphasis>
Scalability, Availability, and Failover Guide</Emphasis>
.</Body>
<Heading-2>
<A ID="pgfId-1057751"></A>
<A ID="46877"></A>
Linux Requirements Change</Heading-2>
<Body>
<A ID="pgfId-1058081"></A>
To run 4.2 on Linux distributions, Red Hat 5 is required. MarkLogic Server will no longer start up on Red Hat 4. If you are using Red Hat 4, you must upgrade your operating system before upgrading MarkLogic Server. For details on system requirements, see <A href="chap2.xml#id(92831)" xml:link="simple" show="replace" actuate="user" CLASS="XRef">'Supported Platforms' on page&#160;8</A>.</Body>
<Heading-2>
<A ID="pgfId-1058074"></A>
<A ID="99198"></A>
Upgrade and Reindex Required</Heading-2>
<Body>
<A ID="pgfId-1055626"></A>
When you log into the Admin Interface after installing 4.2, you will be prompted to upgrade the security database and the configuration files. The 4.2 security database and configuration files are not backwards compatible with 4.1. Make sure to do a full backup of your databases and data directory before upgrading. If you do not want to reindex after upgrading, turn off reindexing for each database in 4.1 before installing 4.2. For details and index compatibility, see <A href="../install_all/intro.xml#id(80903)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Upgrades and Database Compatibility</Hyperlink>
</A> in the <Emphasis>
Installation Guide</Emphasis>
.</Body>
<Heading-2>
<A ID="pgfId-1057889"></A>
<A ID="58795"></A>
Incompatibilities Between 4.0 and 4.1</Heading-2>
<Body>
<A ID="pgfId-1057491"></A>
MarkLogic Server 4.2 allows you to upgrade either from 4.0 or 4.1. If you are upgrading from 4.0, there are some known incompatibilities between 4.0 and 4.1 that are documented in the 4.1 Release Notes. If you are upgrading from 4.1, you can skip this section. For convenience, the incompatilities between 4.0 and 4.1 are repeated here, and are as follows:</Body>
<Body-bullet>
<A ID="pgfId-1057495"></A>
<A href="chap4.xml#id(24817)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Forest Updates-Allowed Admin API Signature Changes</Hyperlink>
</A></Body-bullet>
<Body-bullet>
<A ID="pgfId-1057498"></A>
<A href="chap4.xml#id(70954)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
xdmp:eval/xdmp:invoke Changes for xdmp:set-response-code and Other App Server Built-In Functions</Hyperlink>
</A></Body-bullet>
<Body-bullet>
<A ID="pgfId-1057503"></A>
<A href="chap4.xml#id(88382)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Regular Expression Changes</Hyperlink>
</A></Body-bullet>
<Body-bullet>
<A ID="pgfId-1057507"></A>
<A href="chap4.xml#id(29234)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Spelling Dictionaries are Now Required to be in the Spell Namespace</Hyperlink>
</A></Body-bullet>
<Body-bullet>
<A ID="pgfId-1057511"></A>
<A href="chap4.xml#id(24602)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
spell:suggest Now Returns Suggestions Even If Word Is In the Dictionary</Hyperlink>
</A></Body-bullet>
<Body-bullet>
<A ID="pgfId-1057515"></A>
<A href="chap4.xml#id(77443)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
nobody User Has app-user Role</Hyperlink>
</A></Body-bullet>
<Body-bullet>
<A ID="pgfId-1057519"></A>
<A href="chap4.xml#id(98127)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
xdmp:directory-create Throws Exception if Directory Exists</Hyperlink>
</A></Body-bullet>
<Body-bullet>
<A ID="pgfId-1057523"></A>
<A href="chap4.xml#id(44309)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
XCC Now Requires Java 1.5 or Greater</Hyperlink>
</A></Body-bullet>
<Body-bullet>
<A ID="pgfId-1057526"></A>
<A href="chap4.xml#id(13777)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Output Differences in xdmp:query-meters, xdmp:host-status, and xdmp:forest-status Beginning in 4.1-7</Hyperlink>
</A></Body-bullet>
<Heading-3>
<A ID="pgfId-1057529"></A>
<A ID="24817"></A>
Forest Updates-Allowed Admin API Signature Changes</Heading-3>
<Body>
<A ID="pgfId-1057530"></A>
The following functions for the Admin API have different signatures from 4.0, and are therefore incompatible:</Body>
<Body-bullet>
<A ID="pgfId-1057531"></A>
<code>
admin:forest-get-updates-allowed</code>
</Body-bullet>
<Body-bullet>
<A ID="pgfId-1057532"></A>
<code>
admin:forest-set-updates-allowed</code>
</Body-bullet>
<Body>
<A ID="pgfId-1057533"></A>
In 4.1, there are four values for updates-allowed; in 4.0, it was a boolean value. If you have code that uses these APIs, you must modify the code to use the new values. The <code>
$value</code>
 parameter of <code>
admin:forest-set-updates-allowed</code>
 can now have the following values:</Body>
<Body-bullet>
<A ID="pgfId-1057534"></A>
<code>
all</code>
 (was <code>
true</code>
 in 4.0)</Body-bullet>
<Body-bullet>
<A ID="pgfId-1057535"></A>
<code>
delete-only</code>
 (was <code>
false</code>
 in 4.0)</Body-bullet>
<Body-bullet>
<A ID="pgfId-1057536"></A>
<code>
read-only</code>
</Body-bullet>
<Body-bullet>
<A ID="pgfId-1057537"></A>
<code>
flash-backup</code>
</Body-bullet>
<Body>
<A ID="pgfId-1057540"></A>
The new values reflect the ability to mark a forest read-only in 4.1.</Body>
<Heading-3>
<A ID="pgfId-1057543"></A>
<A ID="70954"></A>
xdmp:eval/xdmp:invoke Changes for xdmp:set-response-code and Other App Server Built-In Functions</Heading-3>
<Body>
<A ID="pgfId-1057544"></A>
Previously, <code>
xdmp:eval</code>
 and <code>
xdmp:invoke</code>
 ignored any calls to the various App Server Built-Ins that change or get state from the response or the request body (for example, <code>
xdmp:set-response-code</code>
, <code>
xdmp:redirect-response</code>
, and so on). In 4.1, these calls work in an <code>
xdmp:eval</code>
 or an <code>
xdmp:invoke</code>
 the same way they do when you run a query in any other context. If you have applications that relied on the old behavior (that is, applications that used App Server Built-In functions in an <code>
xdmp:eval/xdmp:invoke</code>
 but expected them to be no-ops), then you might need to rewrite those <code>
xdmp:eval</code>
 or <code>
xdmp:invoke</code>
 statements.</Body>
<Heading-3>
<A ID="pgfId-1057546"></A>
<A ID="88382"></A>
Regular Expression Changes</Heading-3>
<Body>
<A ID="pgfId-1057547"></A>
The regular expression evaluation in 4.1 has been improved and is more efficient than in 4.0. It is also more conformant to the XQuery specification than 4.0. Some of these conformance changes will cause some regular expressions to behave differently in 4.1 than they did in 4.0. Regular expressions are used in the <code>
fn:matches</code>
, <code>
fn:tokenize</code>
, and <code>
fn:replace</code>
 functions. Some of the changes are as follows:</Body>
<Body-bullet>
<A ID="pgfId-1057548"></A>
You can no longer match the empty string in a regular expression with <code>
fn:replace</code>
 or <code>
fn:tokenize</code>
 (you can with <code>
fn:matches</code>
, however). Previously, the empty string in <code>
fn:replace</code>
 and <code>
fn:tokenize</code>
 matched everything, but in 4.1 it throws an <code>
XDMP-MATCHZERO</code>
 exception.</Body-bullet>
<Body-bullet>
<A ID="pgfId-1057549"></A>
If you place an invalid escape sequence in a regular expression, an exception is raised. In 4.0, some invalid escape sequences (for example, <code>
\/</code>
) were allowed. In 4.1, any invalid escape sequence throws an exception.</Body-bullet>
<Body-bullet>
<A ID="pgfId-1057550"></A>
Certain invalid character classes are no longer allowed. For example, the regular expression <code>
[z-a]</code>
 is acceptable in 4.0 (although it does nothing), but throws an exception in 4.1. All invalid character classes now throw an exception.</Body-bullet>
<Body>
<A ID="pgfId-1057551"></A>
For example, each of the following expressions contains an invalid regular expression, and throws an exception in 4.1 but completes in 4.0:</Body>
<Code>
<A ID="pgfId-1057552"></A>
xquery version &quot;1.0-ml&quot;;

fn:replace(&quot;&quot;,&quot;\s*&quot;,&quot;x&quot;),
fn:replace(&quot;http://marklogic.com&quot;, &quot;\/&quot;, &quot;X&quot;),
fn:replace(&quot;abc&quot;, &quot;[z-a]&quot;, &quot;z&quot;)
(: 
&#160;&#160;&#160;Throws exception in 4.1, returns the following in 4.0:
&#160;&#160;&#160;x
&#160;&#160;&#160;http:XXmarklogic.com
&#160;&#160;&#160;abc
:)</Code>
<Body>
<A ID="pgfId-1057553"></A>
If you have any code that uses these regular expressions, you should review the regular expressions and rewrite it as needed.</Body>
<Heading-3>
<A ID="pgfId-1057555"></A>
<A ID="29234"></A>
Spelling Dictionaries are Now Required to be in the Spell Namespace</Heading-3>
<Body>
<A ID="pgfId-1057556"></A>
When using the spelling correction functions in 4.1, the dictionary documents must be in the <code>
http://marklogic.com/xdmp/spell</code>
 namespace. Previously, the dictionary documents were supposed to be in this namespace, but in some cases it still worked if it was in no namespace. If you have dictionaries that are not in the <code>
spell</code>
 namespace, then you must transform them to be in that namespace for them to work correctly in 4.1.</Body>
<Heading-3>
<A ID="pgfId-1057558"></A>
<A ID="24602"></A>
spell:suggest Now Returns Suggestions Even If Word Is In the Dictionary</Heading-3>
<Body>
<A ID="pgfId-1057559"></A>
The <code>
spell:suggest</code>
 function now returns spelling suggestions when a word appears in the dictionary (that is, when it is spelled correctly). In 4.0, <code>
spell:suggest</code>
 returns the empty sequence if the word is in the dictionary. To find out if a word is in the dictionary (that is, to find if a word is spelled correctly), use the <code>
spell:is-correct</code>
 function. If you have code that relies on the old behavior of <code>
spell:suggest</code>
 returning an empty sequence for a correctly spelled word, you should rewrite that code to use <code>
spell:is-correct</code>
 in 4.1.</Body>
<Heading-3>
<A ID="pgfId-1057561"></A>
<A ID="77443"></A>
nobody User Has app-user Role</Heading-3>
<Body>
<A ID="pgfId-1057562"></A>
Upgrading to 4.1 adds the <code>
app-user</code>
 role to the <code>
nobody</code>
 user. The <code>
app-user</code>
 role has privileges to run the <code>
xdmp:value</code>
 and <code>
xdmp:with-namespaces</code>
 functions. If you have any applications that use the <code>
nobody</code>
 user, those applications will now run with more privileges than they had in 4.0 (unless you had manually changed the roles assigned to the <code>
nobody</code>
 user). The <code>
nobody</code>
 user is, by default, the default user for App Servers before authentication takes place. If you do not want the <code>
nobody</code>
 user to have these privileges, than you can modify the <code>
nobody</code>
 user after the upgrade. </Body>
<Body>
<A ID="pgfId-1057566"></A>
Application Builder relies on the <code>
nobody</code>
 user having these privileges, however, so if you modify the <code>
nobody</code>
 user (or the <code>
app-user</code>
 role), than Application Builder might not work as expected. Additionally, Application Builder uses the <code>
app-user</code>
 role to put execute permissions on the error handler, and if the <code>
nobody</code>
 user does not have the <code>
app-user</code>
 role then no users will be able to log in to applications built with Application Builder.</Body>
<Heading-3>
<A ID="pgfId-1057577"></A>
<A ID="98127"></A>
xdmp:directory-create Throws Exception if Directory Exists</Heading-3>
<Body>
<A ID="pgfId-1057578"></A>
In 4.1, if you try to create a directory (using <code>
xdmp:directory-create</code>
, for example) and the directory already exists, then an exception is thrown (<code>
XDMP-DIREXISTS</code>
). In 4.0, the directory was re-created, and no exception was thrown. If you have code that relies on the old behavior, you must modify that code to make it handle the exception when the directory exists.</Body>
<Heading-3>
<A ID="pgfId-1057580"></A>
<A ID="44309"></A>
XCC Now Requires Java 1.5 or Greater</Heading-3>
<Body>
<A ID="pgfId-1057581"></A>
The 4.1 Java XCC libraries now require Java 1.5 or greater. Previously they required Java 1.4 or greater. If you have XCC applications that run with Java 1.4, in order to use them with a 4.1 XCC package, you will need to upgrade those application environments to use Java 1.5 or greater. If you are still using a 4.0 XCC package, then the applications should continue to work, although you will not be able to use any of the 4.1-specific XCC feature (SSL, for example).</Body>
<Heading-3>
<A ID="pgfId-1057583"></A>
<A ID="13777"></A>
Output Differences in xdmp:query-meters, xdmp:host-status, and xdmp:forest-status Beginning in 4.1-7</Heading-3>
<Body>
<A ID="pgfId-1057584"></A>
Starting with 4.1-7, the <code>
xdmp:query-meters</code>
, <code>
xdmp:host-status</code>
, and <code>
xdmp:forest-status</code>
 functions contain additional XML elements in their output. If you have applications that are not expecting these additional elements, it might cause an incompatibilty in those application. The only difference in the output is additional elements; all of the information that was there previoulsly is still available. Therefore, an incompatibility would only occur in the event that your application is expecting only the old elements to be returned.</Body>
</XML>

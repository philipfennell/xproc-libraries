<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="fragments.css" type="text/css" charset="UTF-8"?>
<XML>
<TITLE> </TITLE><Heading-1>
<A ID="pgfId-1038002"></A>
<A ID="41943"></A>
Fragments</Heading-1>
<pagenum>
<A ID="pgfId-1038590"></A>
252</pagenum>
<Body>
<A ID="pgfId-1038003"></A>
Before loading data into a database, you have the option of specifying how XML documents will be partitioned for storage into smaller blocks of information called fragments. For large source XML documents, size can become an issue, and using fragments help manage performance of your system. In general, fragments for XML documents should be sized between 10K and 100K. Fragments set too small or too big can slow down performance, so proper fragment sizing is important. </Body>
<Body>
<A ID="pgfId-1038004"></A>
The actual fragmentation of an XML document is completely transparent to the application programmer. At the XQuery program level, the document appears to be a single integral structure, regardless of how it is stored and managed as fragments on disk. Fragmentation is an application-transparent tuning mechanism.</Body>
<Body>
<A ID="pgfId-1038005"></A>
However, fragmentation does impact relevance ranking. The relevance-ranking algorithm considers both term frequency within a target piece of content and overall term frequency within the database to rank results by relevance. Rather than consider term frequency across the entire XML document for ranking purposes, MarkLogic Server considers term frequency within the individual fragment (and its descendants) being ranked. Consequently, different fragmentation strategies may impact relevance rankings--particularly in situations when a single fragment may straddle multiple XML structures that you are trying to differentiate on a relevance basis. </Body>
<Body>
<A ID="pgfId-1038006"></A>
With MarkLogic Server, you specify fragmentation rules that are used to partition your XML documents. These rules are applied one document at a time. However, fragmentation rules are specified at the database level--on the assumption that databases contain many documents with similar structures where the same fragmentation rules should be applied.</Body>
<Body>
<A ID="pgfId-1038583"></A>
Fragmentation rules are applied to documents during document loads, updates, and database reindexing. Specifying additional fragmentation rules after documents have been loaded causes future updates and/or reindexing of those documents to use the new fragmentation rules, but does not change the fragmentation of existing documents (if <code>
reindex enable</code>
 is set to <code>
true</code>
, however, the documents will eventually be reindexed and take on the new fragmentation policy). As a result, if you want to change the fragmentation rules for already loaded content, you will have to reload your documents or reindex the database so that your new fragmentation rules can take effect.</Body>
<Body>
<A ID="pgfId-1038008"></A>
Use the following procedures for managing fragmentation rules:</Body>
<Body-bullet>
<A ID="pgfId-1038012"></A>
<A href="fragments.xml#id(95740)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Choosing a Fragmentation Strategy</Hyperlink>
</A></Body-bullet>
<Body-bullet>
<A ID="pgfId-1038016"></A>
<A href="fragments.xml#id(79691)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Defining Fragment Roots</Hyperlink>
</A></Body-bullet>
<Body-bullet>
<A ID="pgfId-1038020"></A>
<A href="fragments.xml#id(65520)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Defining Fragment Parents</Hyperlink>
</A></Body-bullet>
<Body-bullet>
<A ID="pgfId-1038024"></A>
<A href="fragments.xml#id(46736)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Viewing Fragment Rules</Hyperlink>
</A></Body-bullet>
<Body-bullet>
<A ID="pgfId-1038028"></A>
<A href="fragments.xml#id(59172)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Deleting Fragment Rules</Hyperlink>
</A></Body-bullet>
<Heading-2>
<A ID="pgfId-1038029"></A>
<A ID="95740"></A>
Choosing a Fragmentation Strategy</Heading-2>
<Body>
<A ID="pgfId-1038030"></A>
Proper fragmentation is important to performance.   Before you specify how to fragment the XML data being loaded, you need to plan your fragmentation strategy. Apply the following guidelines:</Body>
<Body-bullet>
<A ID="pgfId-1038031"></A>
Fragments are described generically using XML element names.</Body-bullet>
<Body-bullet>
<A ID="pgfId-1038032"></A>
Fragments for XML documents should be between 10K and 100K in size (these are just general guidelines; in some situations, larger or smaller fragment sizes can work fine, and there are many factors that will affect performance for a given fragment size including disk block size, how many fragments are in the database, how often fragments are accessed, the types of queries used in the application, and so on).</Body-bullet>
<Body-bullet>
<A ID="pgfId-1038033"></A>
Fragments can be (and in many cases, should be) nested hierarchically.</Body-bullet>
<Body-bullet>
<A ID="pgfId-1038034"></A>
Smaller fragment sizes allow more efficient element-level updates in the database, but excessively small fragments can slow down both loading speed and query performance.</Body-bullet>
<Body-bullet>
<A ID="pgfId-1038035"></A>
Larger fragment sizes can also slow down query performance by requiring excessive loading of data from disk in resolving queries.</Body-bullet>
<Body-bullet>
<A ID="pgfId-1038036"></A>
In general, within the size range set above, larger fragment sizes deliver higher-performance overall than smaller fragment sizes.</Body-bullet>
<Body-bullet>
<A ID="pgfId-1038514"></A>
Binary and text documents must fit in a single fragment. Therefore, set the database <code>
in&#160;memory&#160;tree&#160;size</code>
 parameter to 1 to 2 MB larger than your largest binary or text file.</Body-bullet>
<Body>
<A ID="pgfId-1038037"></A>
After you decide how to fragment your data, you can use either of the following methods:</Body>
<Body-bullet>
<A ID="pgfId-1038041"></A>
<A href="fragments.xml#id(34807)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Fragment Roots</Hyperlink>
</A></Body-bullet>
<Body-bullet>
<A ID="pgfId-1038045"></A>
<A href="fragments.xml#id(22300)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Fragment Parents</Hyperlink>
</A></Body-bullet>
<Body>
<A ID="pgfId-1038046"></A>
Both methods turn your fragmentation strategy into concrete rules for the system.</Body>
<Heading-3>
<A ID="pgfId-1038047"></A>
<A ID="34807"></A>
Fragment Roots</Heading-3>
<Body>
<A ID="pgfId-1038048"></A>
If a document contains many instances of an XML structure that share a common element name, then these structures make sensible fragments. With MarkLogic Server, you can use this common element name as a fragment root.</Body>
<Body>
<A ID="pgfId-1038049"></A>
The following diagram shows an XML document rooted at <code>
&lt;CitationSet&gt;</code>
 that contains many instances of a <code>
&lt;Citation&gt;</code>
 node. Each <code>
&lt;Citation&gt;</code>
 node contains further XML and averages between 15K and 20K in size. Based on this information, <code>
&lt;Citation&gt;</code>
 is a sensible element to use as a fragment root:</Body>
<Body>
<A ID="pgfId-1042921"></A>
<IMAGE xml:link="simple" href="fragments-1.gif" show="embed" actuate="auto"/>
</Body>
<Heading-3>
<A ID="pgfId-1038055"></A>
<A ID="22300"></A>
Fragment Parents</Heading-3>
<Body>
<A ID="pgfId-1038056"></A>
If your document contains many different XML substructures, each of which is a good candidate to be a fragment, then it would be time consuming to specify each substructure as a fragment root. Instead, you can specify fragments by setting the parent of these substructures to be a fragment parent--so that every substructure under this parent becomes a separate fragment, regardless of its name.</Body>
<Body>
<A ID="pgfId-1038057"></A>
The following diagram shows a document with substructures of different names:</Body>
<Body>
<A ID="pgfId-1043103"></A>
<IMAGE xml:link="simple" href="fragments-2.gif" show="embed" actuate="auto"/>
</Body>
<Body>
<A ID="pgfId-1038062"></A>
In this case, you can use the <code>
&lt;Products&gt;</code>
 element as a fragment parent, and the <code>
&lt;Books&gt;</code>
, <code>
&lt;Movies&gt;</code>
, <code>
&lt;Music&gt;</code>
, <code>
&lt;Games&gt;</code>
 and <code>
&lt;Toys&gt;</code>
 children automatically become fragments.</Body>
<Heading-2>
<A ID="pgfId-1038063"></A>
<A ID="79691"></A>
Defining Fragment Roots</Heading-2>
<Body>
<A ID="pgfId-1038064"></A>
To define a rule for a fragment root, complete the following procedure:</Body>
<Number1>
<A ID="pgfId-1038065"></A>
Click the Databases icon on the left tree menu.</Number1>
<NumberList>
<Number>
<A ID="pgfId-1038067"></A>
Determine the database for which you are specifying a new fragment rule.</Number>
<Number>
<A ID="pgfId-1038068"></A>
Click the icon for this database, either in the tree menu or the Database Summary page.</Number>
<Number>
<A ID="pgfId-1038069"></A>
Click the Fragment Roots icon.</Number>
<Number>
<A ID="pgfId-1038070"></A>
<A ID="32244"></A>
Click the Create tab. The Fragment Roots Configuration page displays:</Number>
</NumberList>
<Body-indent>
<A ID="pgfId-1038075"></A>
<IMAGE xml:link="simple" href="images/frag_root.gif" show="embed" actuate="auto"/>
</Body-indent>
<NumberList>
<Number>
<A ID="pgfId-1038076"></A>
<A ID="41552"></A>
Enter the namespace URI of the XML element that you are using as a rule for the fragment root.</Number>
</NumberList>
<Body-indent>
<A ID="pgfId-1038077"></A>
Every XML element is associated with a namespace. For the fragment rule to be precise, you must specify the namespace of the XML element. Leaving the namespace URI field blank specifies the universal unnamed namespace.</Body-indent>
<Body-indent>
<A ID="pgfId-1038078"></A>
Alternatively, you can specify that the rule for the fragment root is namespace independent by putting an asterisk (*) in the namespace URI field.</Body-indent>
<NumberList>
<Number>
<A ID="pgfId-1038079"></A>
<A ID="95366"></A>
Enter the element name in the localname field.</Number>
</NumberList>
<Body-indent>
<A ID="pgfId-1038080"></A>
The local name is the name of the XML element used as the root of a fragment. If you have more than one fragment root rule associated with the specified namespace, you can provide a comma-separated list of element names.</Body-indent>
<NumberList>
<Number>
<A ID="pgfId-1038081"></A>
To add more fragment roots, click the More Items button and repeat step <A href="fragments.xml#id(41552)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
6</Hyperlink>
</A> - step <A href="fragments.xml#id(95366)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
7</Hyperlink>
</A> for each fragment root as needed.</Number>
<Number>
<A ID="pgfId-1038082"></A>
Scroll to the top or bottom and click OK.</Number>
</NumberList>
<EndList-root>
<A ID="pgfId-1038083"></A>
The new fragment root rules are added to the database. These rules are applied to XML documents loaded into the specified database from this point on.</EndList-root>
<Heading-2>
<A ID="pgfId-1038084"></A>
<A ID="65520"></A>
Defining Fragment Parents</Heading-2>
<Body>
<A ID="pgfId-1038085"></A>
To define a rule for a fragment parent, perform the following steps:</Body>
<Number1>
<A ID="pgfId-1038086"></A>
Click the Databases icon on the left tree menu.</Number1>
<NumberList>
<Number>
<A ID="pgfId-1042156"></A>
Determine the database for which you are specifying a new fragment parent.</Number>
<Number>
<A ID="pgfId-1042157"></A>
Click the icon for this database, either in the tree menu or the Database Summary page.</Number>
<Number>
<A ID="pgfId-1038090"></A>
Click the Fragment Parents icon.</Number>
<Number>
<A ID="pgfId-1038091"></A>
Click the Create tab. The Fragment Parents Configuration page displays:</Number>
</NumberList>
<Body-indent>
<A ID="pgfId-1038096"></A>
<IMAGE xml:link="simple" href="images/frag_parent.gif" show="embed" actuate="auto"/>
</Body-indent>
<NumberList>
<Number>
<A ID="pgfId-1038097"></A>
<A ID="86770"></A>
Enter the namespace URI of the XML element that you are using as a rule for the fragment parent.</Number>
</NumberList>
<Body-indent>
<A ID="pgfId-1038098"></A>
Every XML element is associated with a namespace. For the fragment rule to be precise, you must specify the namespace of the XML element. Leaving the namespace URI field blank specifies the universal unnamed namespace.</Body-indent>
<Body-indent>
<A ID="pgfId-1038099"></A>
Alternatively, you can specify that the rule for the fragment root is namespace independent by putting an asterisk (*) in the namespace URI field.</Body-indent>
<NumberList>
<Number>
<A ID="pgfId-1038100"></A>
<A ID="16335"></A>
Enter the element name in the localname field.</Number>
</NumberList>
<Body-indent>
<A ID="pgfId-1038101"></A>
The local name is the name of the parent XML element whose children will be fragment roots. If you have more than one fragment parent rule associated with the specified namespace, you can provide a comma-separated list of element names.</Body-indent>
<NumberList>
<Number>
<A ID="pgfId-1038102"></A>
To add more fragment parents, click the More Items button and repeat step <A href="fragments.xml#id(86770)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
6</Hyperlink>
</A> - step <A href="fragments.xml#id(16335)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
7</Hyperlink>
</A> for each fragment parent as needed.</Number>
<Number>
<A ID="pgfId-1038103"></A>
Scroll to the top or bottom and click OK.</Number>
</NumberList>
<EndList-root>
<A ID="pgfId-1038104"></A>
The new fragment rules are added to the database. These rules are applied to XML documents loaded into the specified database from this point on.</EndList-root>
<Heading-2>
<A ID="pgfId-1038105"></A>
<A ID="46736"></A>
Viewing Fragment Rules</Heading-2>
<Body>
<A ID="pgfId-1038106"></A>
To view fragment rules that are in effect, perform the following steps:</Body>
<Number1>
<A ID="pgfId-1038107"></A>
Click the Databases icon on the left tree menu.</Number1>
<NumberList>
<Number>
<A ID="pgfId-1038109"></A>
Locate the database whose fragment rules you want to view, either in the tree menu or the Database Summary page.</Number>
<Number>
<A ID="pgfId-1038110"></A>
Click the icon for this database.</Number>
<Number>
<A ID="pgfId-1038111"></A>
Determine whether to view the rules for the fragment root or fragment parent.</Number>
<Number>
<A ID="pgfId-1038112"></A>
Click either the Fragment Roots icon or Fragment Parents icon, under the specified database.</Number>
</NumberList>
<EndList-root>
<A ID="pgfId-1038114"></A>
The following example shows that the Documents database has only one rule defined for a fragment parent. The rule states that any direct child of an &lt;RDF&gt; element, regardless of the namespace for the &lt;RDF&gt; element, should form the root of a fragment:</EndList-root>
<Body-indent>
<A ID="pgfId-1038118"></A>
 <IMAGE xml:link="simple" href="images/frag_parent2.gif" show="embed" actuate="auto"/>
</Body-indent>
<Heading-2>
<A ID="pgfId-1038119"></A>
<A ID="59172"></A>
Deleting Fragment Rules</Heading-2>
<Body>
<A ID="pgfId-1038120"></A>
To delete fragment rules for a specific database, perform the following steps:</Body>
<Number1>
<A ID="pgfId-1038121"></A>
Click the Databases icon on the left tree menu.</Number1>
<NumberList>
<Number>
<A ID="pgfId-1038123"></A>
Locate the database that contains the fragment rules you want to delete, either in the tree menu or the Database Summary page.</Number>
<Number>
<A ID="pgfId-1038124"></A>
Click the icon for this database.</Number>
<Number>
<A ID="pgfId-1038125"></A>
Determine whether you need to delete a rule for a fragment root or fragment parent.</Number>
<Number>
<A ID="pgfId-1038126"></A>
Click either the Fragment Roots icon or Fragment Parents icon, under the specified database.</Number>
<Number>
<A ID="pgfId-1038128"></A>
Locate the fragment rule you want to delete and click Delete.</Number>
<Number>
<A ID="pgfId-1038129"></A>
A confirmation message displays. Confirm the delete and click OK.</Number>
</NumberList>
<EndList-root>
<A ID="pgfId-1038131"></A>
The fragment rule is dropped from the database.</EndList-root>
<Note>
<A ID="pgfId-1038132"></A>
Deleting fragment rules has no impact on the fragmentation that has already been applied to documents loaded into the database, unless reindexing is enabled for the database.</Note>
</XML>

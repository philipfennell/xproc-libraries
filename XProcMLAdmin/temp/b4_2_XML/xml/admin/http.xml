<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="http.css" type="text/css" charset="UTF-8"?>
<XML>
<TITLE> </TITLE><Heading-1>
<A ID="pgfId-1038002"></A>
<A ID="28058"></A>
HTTP Servers</Heading-1>
<pagenum>
<A ID="pgfId-1043048"></A>
38</pagenum>
<Body>
<A ID="pgfId-1038003"></A>
This chapter describes HTTP servers and provides procedures for configuring them. The following sections are included:</Body>
<Body-bullet>
<A ID="pgfId-1046674"></A>
<A href="http.xml#id(25313)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
HTTP Server Overview</Hyperlink>
</A></Body-bullet>
<Body-bullet>
<A ID="pgfId-1046690"></A>
<A href="http.xml#id(44355)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Procedures for Creating and Managing HTTP Servers</Hyperlink>
</A></Body-bullet>
<Body>
<A ID="pgfId-1052806"></A>
This chapter describes how to use the Admin Interface to create and configure HTTP servers. For details on how to create and configure HTTP servers programmatically, see <A href="../AdminAPI/configure.xml#id(18698)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Creating and Configuring App Servers</Hyperlink>
</A> in the <Emphasis>
Scripting Administrative Tasks Guide</Emphasis>
.</Body>
<Heading-2>
<A ID="pgfId-1046669"></A>
<A ID="25313"></A>
HTTP Server Overview</Heading-2>
<Body>
<A ID="pgfId-1046670"></A>
MarkLogic Server enables you to write XQuery-based web applications by connecting sets of XML content to HTTP servers that can access stored XQuery programs. These applications can return XHTML or XML content to a browser or other HTTP-enabled client application.</Body>
<Body>
<A ID="pgfId-1038004"></A>
HTTP servers are defined at the group level and are accessible by all hosts within the group. Each HTTP server provides access to a set of XQuery programs that reside within a specified directory structure. Each host in the group must have access to the directory structure or mirror the directory structure along with the program files. An HTTP server executes the XQuery programs against the database to which it is connected.</Body>
<Body>
<A ID="pgfId-1046664"></A>
HTTP servers follow the MarkLogic Server security model, as do WebDAV and XDBC servers. The server authenticates access to those programs using user IDs and passwords stored in the security database for that HTTP server. (Each HTTP server is connected to a database, and each database is in turn connected to a security database in which security objects such as users are stored.) </Body>
<Body>
<A ID="pgfId-1046665"></A>
HTTP servers can execute XQuery code, either from a specified location on the file system or from a Modules database. </Body>
<Body>
<A ID="pgfId-1038006"></A>
Granular access control to the system and to the data is achieved through the use of privileges and permissions. For details on configuring security objects in MarkLogic Server, see <A href="security.xml#id(73923)" xml:link="simple" show="replace" actuate="user" CLASS="XRef">'Security Administration' on page&#160;187</A>. For conceptual information on the MarkLogic Server security model, see <Emphasis>
Understanding and Using Security Guide</Emphasis>
.</Body>
<Heading-2>
<A ID="pgfId-1046678"></A>
<A ID="44355"></A>
Procedures for Creating and Managing HTTP Servers</Heading-2>
<Body>
<A ID="pgfId-1038007"></A>
Use the following procedures to create and manage HTTP servers:</Body>
<Body-bullet>
<A ID="pgfId-1038011"></A>
<A href="http.xml#id(67435)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Creating a New HTTP Server</Hyperlink>
</A></Body-bullet>
<Body-bullet>
<A ID="pgfId-1038015"></A>
<A href="http.xml#id(56583)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Viewing HTTP Server Settings</Hyperlink>
</A></Body-bullet>
<Body-bullet>
<A ID="pgfId-1038019"></A>
<A href="http.xml#id(28235)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Deleting an HTTP Server</Hyperlink>
</A></Body-bullet>
<Body-bullet>
<A ID="pgfId-1047704"></A>
<A href="http.xml#id(72344)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Canceling a Request</Hyperlink>
</A></Body-bullet>
<Heading-3>
<A ID="pgfId-1038020"></A>
<A ID="67435"></A>
Creating a New HTTP Server</Heading-3>
<Body>
<A ID="pgfId-1038021"></A>
To create a new server, complete the following steps:</Body>
<Number1>
<A ID="pgfId-1038022"></A>
Click the Groups icon in the left frame.</Number1>
<NumberList>
<Number>
<A ID="pgfId-1038023"></A>
Click the group in which you want to define the HTTP server (for example, Default).</Number>
<Number>
<A ID="pgfId-1038024"></A>
Click the App Servers icon on the left tree menu.</Number>
<Number>
<A ID="pgfId-1038025"></A>
Click the Create HTTP tab at the top right. The Create HTTP Server page will display:</Number>
</NumberList>
<Body>
<A ID="pgfId-1046818"></A>
<IMAGE xml:link="simple" href="images/create_http.gif" show="embed" actuate="auto"/>
</Body>
<NumberList>
<Number>
<A ID="pgfId-1046819"></A>
In the Server Name field, enter a shorthand name for this HTTP server. MarkLogic Server will use this name to refer to this server on display screens in the Admin Interface.</Number>
<Number>
<A ID="pgfId-1038033"></A>
In the Root directory field, enter the name of the directory in which you will store your XQuery programs. If the Modules field is set to a database, then the root must be a directory URI in the specified modules database. </Number>
</NumberList>
<Body-indent>
<A ID="pgfId-1038034"></A>
If the Modules field is set to file system, then the root directory is either a fully-qualified pathname or is relative to the directory in which MarkLogic Server is installed. The following table shows the default installation directory for each platform:</Body-indent>
<TableAnchor>
<A ID="pgfId-1046860"></A>
</TableAnchor>
<TABLE>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellHeading>
<A ID="pgfId-1046845"></A>
Platform</CellHeading>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellHeading>
<A ID="pgfId-1046847"></A>
Program Directory</CellHeading>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<A ID="pgfId-1046849"></A>
Microsoft Windows</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CodeLeft>
<A ID="pgfId-1046851"></A>
C:\Program Files\MarkLogic</CodeLeft>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<A ID="pgfId-1046853"></A>
Red Hat Linux</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CodeLeft>
<A ID="pgfId-1046855"></A>
/opt/MarkLogic</CodeLeft>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<A ID="pgfId-1046857"></A>
Sun Solaris</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CodeLeft>
<A ID="pgfId-1046859"></A>
/opt/MARKlogic</CodeLeft>
</CELL>
</ROW>
</TABLE>
<Note>
<A ID="pgfId-1051219"></A>
Unless you specify a shared drive, all hosts in the group will need to have a copy of the XQuery programs in the directory specified above.</Note>
<WarningList>
<Warning>
<A ID="pgfId-1038057"></A>
Do not create HTTP server root directories named Docs, Data or Admin. These directories are reserved by MarkLogic Server for other purposes. Creating HTTP server root directories with these names can result in unpredictable behavior of the server and may also complicate the software upgrade process.</Warning>
<Number>
<A ID="pgfId-1038058"></A>
In the Port field, enter the port number through which you want to make this HTTP server available.</Number>
</WarningList>
<Body-indent>
<A ID="pgfId-1038059"></A>
The port number must not be assigned to any other HTTP, XDBC or WebDAV server.</Body-indent>
<NumberList>
<Number>
<A ID="pgfId-1038060"></A>
In the Modules field, select the database to use as the modules database for your XQuery documents, or leave it at the default of storing your XQuery modules on the file system. For information on what a modules database is, see <A href="databases.xml#id(38484)" xml:link="simple" show="replace" actuate="user" CLASS="XRef">'Modules Database' on page&#160;97</A>.</Number>
<Number>
<A ID="pgfId-1051222"></A>
In the Database field and select the database to be accessed by this HTTP server. Multiple HTTP, XDBC, and WebDAV servers can access the same database.</Number>
<Number>
<A ID="pgfId-1038062"></A>
Scroll to the Authentication field. Select an authentication scheme: digest, basic, digestbasic, or application-level. The default is digest, which uses encrypted passwords.</Number>
</NumberList>
<Body-indent>
<A ID="pgfId-1038066"></A>
<IMAGE xml:link="simple" href="images/http_auth.gif" show="embed" actuate="auto"/>
</Body-indent>
<Body-indent>
<A ID="pgfId-1038067"></A>
If you select application-level authentication, you will also need to fill in a Default User. Any one accessing the HTTP server is automatically logged in as the Default User until the user logs in explicitly. </Body-indent>
<Body-indent>
<A ID="pgfId-1038071"></A>
<IMAGE xml:link="simple" href="images/http_applevel.gif" show="embed" actuate="auto"/>
</Body-indent>
<WarningList>
<Warning>
<A ID="pgfId-1038072"></A>
If you use an admin user (admin) as the Default User (an authorized administrator with the <code>
admin</code>
 role), then everyone who uses this App Server is automatically a user with the <code>
admin</code>
 role, which effectively turns off security for this App Server. </Warning>
<Number>
<A ID="pgfId-1051237"></A>
Scroll to the Privilege field near the bottom of the screen. This field represents the privilege needed to access (login to) the server. You may leave this field blank. </Number>
</WarningList>
<Body-indent>
<A ID="pgfId-1038073"></A>
A user accessing the HTTP server must have the execute privilege selected in order to access the HTTP server. If you chose application-level authentication above, you should ensure that the default user has the selected privilege.</Body-indent>
<Body-indent>
<A ID="pgfId-1038077"></A>
<IMAGE xml:link="simple" href="images/http_priv.gif" show="embed" actuate="auto"/>
</Body-indent>
<NumberList>
<Number>
<A ID="pgfId-1038078"></A>
Set any other properties for this App Server, as appropriate to your needs:</Number>
</NumberList>
<Body-bullet-2>
<A ID="pgfId-1052337"></A>
Last Login and Display Last Login are described in <A href="session-login.xml#id(54951)" xml:link="simple" show="replace" actuate="user" CLASS="XRef">'Storing and Monitoring the Last User Login Attempt' on page&#160;94</A>.</Body-bullet-2>
<Body-bullet-2>
<A ID="pgfId-1052454"></A>
Address specifies the IP address for the App Server.</Body-bullet-2>
<Body-bullet-2>
<A ID="pgfId-1052455"></A>
Backlog specifies the maximum number of pending connections allowed on the HTTP server socket.</Body-bullet-2>
<Body-bullet-2>
<A ID="pgfId-1052456"></A>
Threads specifies the maximum number of App Server threads.</Body-bullet-2>
<Body-bullet-2>
<A ID="pgfId-1052457"></A>
Request Timeout specifies the maximum number of seconds before a socket receives a timeout for the first request.</Body-bullet-2>
<Body-bullet-2>
<A ID="pgfId-1052458"></A>
Keep Alive timeout specifies the maximum number of seconds before a socket receives a timeout for subsequent requests over the same connection.</Body-bullet-2>
<Body-bullet-2>
<A ID="pgfId-1052655"></A>
Session Timeout specifies the maximum number of seconds before an inactive session times out.</Body-bullet-2>
<Body-bullet-2>
<A ID="pgfId-1052460"></A>
Max Time Limit specifies the upper bound for any request's time limit. No request may set its time limit (for example with xdmp:set-request-time-limit) higher than this number. The time limit, in turn, is the maximum number of seconds allowed for servicing a query request. The App Server gives up on queries which take longer, and returns an error.</Body-bullet-2>
<Body-bullet-2>
<A ID="pgfId-1052760"></A>
Default Time Limit specifies the default value for any request's time limit, when otherwise unspecified. A request can change its time limit using <code>
xdmp:set-request-time-limit</code>
. The time limit, in turn, is the maximum number of seconds allowed for servicing a query request. The App Server gives up on queries which take longer, and returns an error.</Body-bullet-2>
<Body-bullet-2>
<A ID="pgfId-1052462"></A>
Static Expires adds an &quot;expires&quot; HTTP header for static content to expire after this many seconds.</Body-bullet-2>
<Body-bullet-2>
<A ID="pgfId-1052715"></A>
Pre-commit Trigger Limit specifies the maximum number of pre-commit triggers a single statement against this App Server can invoke. For more information on triggers, see <A href="../dev_guide/triggers.xml#id(17020)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Using Triggers to Spawn Actions</Hyperlink>
</A> in the <Emphasis>
Application Developer's Guide</Emphasis>
.</Body-bullet-2>
<Body-bullet-2>
<A ID="pgfId-1052464"></A>
Pre-commit Trigger Depth specifies the maximum depth (how many triggers can cause other triggers to fire, which in turn cause others to fire, and so on) for pre-commit triggers that are executed against this App Server. For more information on triggers, see <A href="../dev_guide/triggers.xml#id(17020)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Using Triggers to Spawn Actions</Hyperlink>
</A> in the <Emphasis>
Application Developer's Guide</Emphasis>
.</Body-bullet-2>
<Body-bullet-2>
<A ID="pgfId-1052633"></A>
Collation specifies the default collation for queries run in this appserver. This will be the collation used for string comparison and sorting if none is specified in the query. For details, see <A href="../search-dev-guide/encodings_collations.xml#id(40505)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Encodings and Collations</Hyperlink>
</A> in the <Emphasis>
Search Developer's Guide</Emphasis>
.</Body-bullet-2>
<Body-bullet-2>
<A ID="pgfId-1052390"></A>
Concurrent Request Limit specifies the maximum number of requests any user may have running at a specific time. 0 indicates no maximum. For details, see <A href="session-login.xml#id(48668)" xml:link="simple" show="replace" actuate="user" CLASS="XRef">'Managing Concurrent User Sessions' on page&#160;92</A>.</Body-bullet-2>
<Body-bullet-2>
<A ID="pgfId-1052519"></A>
Log Errors specifes whether to log uncaught errors for this App Server to the ErrorLog.txt file. This is useful to log exceptions that might occur on an App Server for later debugging.</Body-bullet-2>
<Body-bullet-2>
<A ID="pgfId-1052520"></A>
Debug Allow specifies whether to allow requests against this App Server to be stopped for debugging, using the MarkLogic Server debugging APIs.</Body-bullet-2>
<Body-bullet-2>
<A ID="pgfId-1052521"></A>
Profile Allow specifies whether to allow requests against this App Server to be profiled, using the MarkLogic Server profiling APIs. For details, see <A href="../performance/profile.xml#id(94939)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Profiling Requests to Evaluate Performance</Hyperlink>
</A> in the Query Performance and Tuning guide.</Body-bullet-2>
<Body-bullet-2>
<A ID="pgfId-1052522"></A>
Default XQuery Version specifies the default XQuery language for this App Server if an XQuery module does explicitly declare its language version.</Body-bullet-2>
<Body-bullet-2>
<A ID="pgfId-1052523"></A>
Output SGML Character Entities specifies whether to output SGML character entities for this App Server, and how to resolve name conflicts. For details, see <A href="../dev_guide/appserver-control.xml#id(28091)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Outputting SGML Entities</Hyperlink>
</A> in the <Emphasis>
Application Developer's Guide</Emphasis>
. </Body-bullet-2>
<Body-bullet-2>
<A ID="pgfId-1052524"></A>
Output Encoding specifies the default output encoding for this App Server. For details, see <A href="../dev_guide/appserver-control.xml#id(99082)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Specifying the Output Encoding</Hyperlink>
</A> in the <Emphasis>
Application Developer's Guide</Emphasis>
.</Body-bullet-2>
<Body-bullet-2>
<A ID="pgfId-1052371"></A>
The Error Handler and URL Rewriter fields are described in <A href="../dev_guide/appserver-control.xml#id(86523)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Controlling App Server Access, Output, and Errors</Hyperlink>
</A> in the <Emphasis>
Application Developer's Guide</Emphasis>
. </Body-bullet-2>
<Body-bullet-2>
<A ID="pgfId-1052344"></A>
The properties associated with SSL support are described in <A href="SSL.xml#id(85783)" xml:link="simple" show="replace" actuate="user" CLASS="XRef">'Configuring SSL on App Servers' on page&#160;58</A>.</Body-bullet-2>
<NumberList>
<Number>
<A ID="pgfId-1051249"></A>
Scroll to the top or bottom and click OK. </Number>
</NumberList>
<EndList-root>
<A ID="pgfId-1038079"></A>
The HTTP server is now created. Creating an HTTP server is a 'hot' admin task; the changes take effect immediately. For information and setup instructions for managing user sessions and/or keeping track of login attempts, see <A href="session-login.xml#id(23690)" xml:link="simple" show="replace" actuate="user" CLASS="XRef">'Managing User Sessions and Monitoring Login Attempts' on page&#160;92</A>.</EndList-root>
<Heading-3>
<A ID="pgfId-1038080"></A>
<A ID="56583"></A>
Viewing HTTP Server Settings</Heading-3>
<Body>
<A ID="pgfId-1038081"></A>
To view the settings for a particular HTTP server, complete the following steps:</Body>
<Number1>
<A ID="pgfId-1038082"></A>
Click the Groups icon in the left frame.</Number1>
<NumberList>
<Number>
<A ID="pgfId-1038083"></A>
Click the group which contains the HTTP server you want to view (for example, Default).</Number>
<Number>
<A ID="pgfId-1038084"></A>
Click the App Servers icon on the left tree menu.</Number>
<Number>
<A ID="pgfId-1038086"></A>
Locate the HTTP server for which you want to view settings, either in the tree menu or on the summary page.</Number>
<Number>
<A ID="pgfId-1038087"></A>
Click the icon for the HTTP server. </Number>
<Number>
<A ID="pgfId-1038088"></A>
View the settings.</Number>
</NumberList>
<Heading-3>
<A ID="pgfId-1038089"></A>
<A ID="28235"></A>
Deleting an HTTP Server</Heading-3>
<Body>
<A ID="pgfId-1038090"></A>
To delete the settings for an HTTP server, complete the following steps:</Body>
<Number1>
<A ID="pgfId-1038091"></A>
Click the Groups icon in the left frame.</Number1>
<NumberList>
<Number>
<A ID="pgfId-1038092"></A>
Click the group which contains the HTTP server you want to delete (for example, Default).</Number>
<Number>
<A ID="pgfId-1038093"></A>
Click the App Servers icon on the left tree menu.</Number>
<Number>
<A ID="pgfId-1047037"></A>
Locate the HTTP server you want to delete, either in the tree menu or on the summary page.</Number>
<Number>
<A ID="pgfId-1038096"></A>
Click the icon for the HTTP server. </Number>
<Number>
<A ID="pgfId-1038097"></A>
Click Delete.</Number>
<Number>
<A ID="pgfId-1038099"></A>
A confirmation message displays. Confirm the delete and click OK.</Number>
</NumberList>
<EndList-root>
<A ID="pgfId-1038100"></A>
Deleting an HTTP server is a 'cold' admin task; the server restarts to reflect your changes.</EndList-root>
<Heading-3>
<A ID="pgfId-1047705"></A>
<A ID="72344"></A>
Canceling a Request</Heading-3>
<Body>
<A ID="pgfId-1047710"></A>
You can cancel a request in the App Server Status page of the Admin Interface (Groups &gt; <Emphasis>
group_name</Emphasis>
 &gt; App Servers &gt; <Emphasis>
app_server_name</Emphasis>
 &gt; Status tab). </Body>
<Body>
<A ID="pgfId-1047769"></A>
<IMAGE xml:link="simple" href="images/cancel_request.gif" show="embed" actuate="auto"/>
</Body>
<Body>
<A ID="pgfId-1047781"></A>
To cancel a long-running request (for example, a long-running query statement or update statement), perform the following steps:</Body>
<Number1>
<A ID="pgfId-1047713"></A>
Click the Group menu item in the Admin Interface.</Number1>
<NumberList>
<Number>
<A ID="pgfId-1047714"></A>
Navigate to the App Server in which the request was issued, either from the tree menu or from the summary page.</Number>
<Number>
<A ID="pgfId-1047715"></A>
Click the Status tab.</Number>
<Number>
<A ID="pgfId-1047768"></A>
Click the Show More button.</Number>
<Number>
<A ID="pgfId-1047716"></A>
At the bottom right of the App Server Status page, click the cancel button on the row for the query you want to cancel.</Number>
<Number>
<A ID="pgfId-1047717"></A>
Click OK on the Cancel Request confirmation page. If the request is already completed when the confirmation page occurs, the page will indicate that the request cannot be found.</Number>
</NumberList>
<EndList-root>
<A ID="pgfId-1047718"></A>
The request is canceled and the App Server Status page appears again.</EndList-root>
</XML>

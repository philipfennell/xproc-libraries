<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet href="sampleapps.css" type="text/css" charset="UTF-8"?>
<XML>
<TITLE> </TITLE><Heading-1>
<A ID="pgfId-1000116"></A>
<A ID="86236"></A>
Using the Sample Applications</Heading-1>
<pagenum>
<A ID="pgfId-1052753"></A>
20</pagenum>
<Body>
<A ID="pgfId-1000122"></A>
The XCC packages contain a number of sample applications. Each sample application is provided along with its source code, giving you a starting point for creating your own applications. This chapter describes the sample applications and contains the following sections:</Body>
<Body-bullet>
<A ID="pgfId-1056898"></A>
<A href="sampleapps.xml#id(17158)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Setting Up Your Environment</Hyperlink>
</A></Body-bullet>
<Body-bullet>
<A ID="pgfId-1056903"></A>
<A href="sampleapps.xml#id(32334)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Sample Applications</Hyperlink>
</A></Body-bullet>
<Heading-2>
<A ID="pgfId-1000363"></A>
<A ID="17158"></A>
Setting Up Your Environment</Heading-2>
<Body>
<A ID="pgfId-1056958"></A>
Before running the sample applications, be sure to set up the necessary environment to run the application. This section has the following parts:</Body>
<Body-bullet>
<A ID="pgfId-1057115"></A>
<A href="sampleapps.xml#id(83678)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Setting Up Your MarkLogic Server Environment</Hyperlink>
</A></Body-bullet>
<Body-bullet>
<A ID="pgfId-1057123"></A>
<A href="sampleapps.xml#id(99107)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Setting Up Your Java Environment</Hyperlink>
</A></Body-bullet>
<Body-bullet>
<A ID="pgfId-1057136"></A>
<A href="sampleapps.xml#id(67822)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"><Hyperlink>
Setting Up Your .NET Environment</Hyperlink>
</A></Body-bullet>
<Heading-3>
<A ID="pgfId-1057082"></A>
<A ID="83678"></A>
Setting Up Your MarkLogic Server Environment</Heading-3>
<Body>
<A ID="pgfId-1057083"></A>
Before you run the sample applications, complete the following steps:</Body>
<Number1>
<A ID="pgfId-1000374"></A>
Install MarkLogic Server, or have a MarkLogic Server installation to which you can connect. For details on installing MarkLogic Server, see the <Emphasis>
Installation Guide</Emphasis>
.</Number1>
<NumberList>
<Number>
<A ID="pgfId-1056975"></A>
Create and configure an XDBC Server using the Admin Interface. See the MarkLogic Server <Emphasis>
Administrator's Guide</Emphasis>
 for details on how to create and configure an XDBC Server.</Number>
<Number>
<A ID="pgfId-1000389"></A>
Configure a user for the XDBC Server you created. For example, add a user to the security database with the username as <code>
user</code>
 and the password as <code>
pass</code>
. See the MarkLogic Server <Emphasis>
Administrator's Guide</Emphasis>
 for details on adding a user to the security database.</Number>
</NumberList>
<Heading-3>
<A ID="pgfId-1057098"></A>
<A ID="99107"></A>
Setting Up Your Java Environment</Heading-3>
<Body>
<A ID="pgfId-1057112"></A>
If you are using XCC/J, you must have Java installed on your client machine. Additionally, you will need the following set up to run the sample applications:</Body>
<Body-bullet>
<A ID="pgfId-1057141"></A>
Set your <code>
JAVA_HOME</code>
 environment variable, if it is not already set. For example, if you are running a Windows machine, set <code>
JAVA_HOME</code>
 in a command window as in the following example:</Body-bullet>
<Code>
<A ID="pgfId-1057152"></A>
set JAVA_HOME=c:\Sun\SDK\jdk</Code>
<Body-indent>
<A ID="pgfId-1057162"></A>
Substitute the directory in which Java is installed in your environment.</Body-indent>
<Body-bullet>
<A ID="pgfId-1057153"></A>
Set your <code>
CLASSPATH</code>
 environment variable correctly, or use the <code>
-classpath</code>
 option to pass the appropriate classpath on the command line. Make sure to use the correct name for the <code>
marklogic-xcc-4.2.x.jar</code>
 file in your <code>
CLASSPATH</code>
, as the name corresponds to the service release version number.</Body-bullet>
<Heading-3>
<A ID="pgfId-1057130"></A>
<A ID="67822"></A>
Setting Up Your .NET Environment</Heading-3>
<Body>
<A ID="pgfId-1057131"></A>
If you are using XCC/.NET, you must have .NET 2.0 Service Pack 1 (SP1), or later installed on your client machine.</Body>
<Heading-2>
<A ID="pgfId-1000426"></A>
<A ID="32334"></A>
Sample Applications</Heading-2>
<Body>
<A ID="pgfId-1056926"></A>
The source code and API documentation for the sample applications are includes in the XCC packages. A <code>
marklogic-xcc-examples-4.2.x.jar</code>
 file is included with the Java distribution of XCC. The commands to launch the sample programs in this section assume you have renames the jar file to <code>
xccexamples.jar</code>
. The sample applications are as follows:</Body>
<TableAnchor>
<A ID="pgfId-1056952"></A>
</TableAnchor>
<TABLE>
<ROW>
<TH ROWSPAN="1" COLSPAN="1">
<CellHeading>
<A ID="pgfId-1056929"></A>
Sample</CellHeading>
</TH>
<TH ROWSPAN="1" COLSPAN="1">
<CellHeading>
<A ID="pgfId-1056931"></A>
Description</CellHeading>
</TH>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<A ID="pgfId-1056933"></A>
<code>
<A href="sampleapps.xml#id(53955)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"></A><Hyperlink>
ContentFetcher</Hyperlink>
<code>
</code>
</code>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<A ID="pgfId-1056935"></A>
This class fetches documents from the conentbase and writes their serialized contents to a provided OutputStream.</CellBody>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<A ID="pgfId-1056937"></A>
<code>
<A href="sampleapps.xml#id(84792)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"></A><Hyperlink>
ContentLoader</Hyperlink>
<code>
</code>
</code>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<A ID="pgfId-1056939"></A>
This program accepts a server URI (in the format expected by <code>
ContentSourceFactory.newContentSource(java.net.URI)</code>
) and one or more file pathnames of documents to load.</CellBody>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<A ID="pgfId-1057452"></A>
<code>
<A href="sampleapps.xml#id(48014)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"></A><Hyperlink>
HelloWorld</Hyperlink>
<code>
</code>
</code>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<A ID="pgfId-1057454"></A>
This very simple class prints out the string <code>
&quot;Hello World&quot;</code>
.</CellBody>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<A ID="pgfId-1056941"></A>
<code>
<A href="sampleapps.xml#id(71721)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"></A><Hyperlink>
ModuleRunner</Hyperlink>
<code>
</code>
</code>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<A ID="pgfId-1056943"></A>
This is a very simple class that will invoke a named XQuery module on the server and return the result.</CellBody>
</CELL>
</ROW>
<ROW>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<A ID="pgfId-1057391"></A>
<code>
<A href="sampleapps.xml#id(50934)" xml:link="simple" show="replace" actuate="user" CLASS="XRef"></A><Hyperlink>
SimpleQueryRunner</Hyperlink>
<code>
</code>
</code>
</CellBody>
</CELL>
<CELL ROWSPAN="1" COLSPAN="1">
<CellBody>
<A ID="pgfId-1057393"></A>
This is a very simple class that will submit an XQuery string to the server and return the result.</CellBody>
</CELL>
</ROW>
</TABLE>
<Heading-3>
<A ID="pgfId-1057026"></A>
<A ID="53955"></A>
ContentFetcher</Heading-3>
<Body>
<A ID="pgfId-1057281"></A>
This program fetches a document from MarkLogic Server and serializes its contents. You can serialize the contents to the standard output (display it on the screen) or to a file using the <code>
-o</code>
 option. The following is a sample command to run the <code>
ModuleRunner</code>
 class:</Body>
<Code>
<A ID="pgfId-1057282"></A>
java -classpath &quot;c:/xcc/marklogic-xcc-4.2.0.jar;
&#160;&#160;&#160;&#160;&#160;c:/xcc/xccexamples.jar&quot;
&#160;&#160;&#160;&#160;&#160;com.marklogic.xcc.examples.ContentFetcher 
&#160;&#160;&#160;&#160;&#160;xcc://username:password@localhost:8021 
&#160;&#160;&#160;&#160;&#160;/mydocs/hello.xml -o myHelloFile.xml</Code>
<Body>
<A ID="pgfId-1057043"></A>
This sends the contents of the document at <code>
/mydocs/hello.xml</code>
 to the file <code>
myHelloFile.xml</code>
 (in the same directory in which the command is run). It connects to the default database of the XDBC Server listening on port 8021 of the local machine, using the credentials <code>
username</code>
 and <code>
password</code>
 to authenticate the connection. </Body>
<Heading-3>
<A ID="pgfId-1057046"></A>
<A ID="84792"></A>
ContentLoader</Heading-3>
<Body>
<A ID="pgfId-1057341"></A>
This program loads the specified document in the database. It loads the file with a URI equal to the fully-qualified pathname of the file. The following is a sample command to run the <code>
ContentLoader</code>
 class:</Body>
<Code>
<A ID="pgfId-1057342"></A>
java -classpath &quot;c:/xcc/marklogic-xcc-4.2.0.jar;
&#160;&#160;&#160;&#160;&#160;c:/xcc/xccexamples.jar&quot;
&#160;&#160;&#160;&#160;&#160;com.marklogic.xcc.examples.ContentLoader 
&#160;&#160;&#160;&#160;&#160;xcc://username:password@localhost:8021 hello.xml</Code>
<Body>
<A ID="pgfId-1057359"></A>
This loads the file at <code>
hello.xml</code>
 to a document with the fully-qualified pathname of <code>
hello.xml</code>
 (for example, <code>
c:\xcc\examples\hello.xml</code>
). It loads it into the default database of the XDBC Server listening on port 8021 of the local machine, using the credentials <code>
username</code>
 and <code>
password</code>
 to authenticate the connection. </Body>
<Heading-3>
<A ID="pgfId-1057464"></A>
<A ID="48014"></A>
HelloWorld</Heading-3>
<Body>
<A ID="pgfId-1057468"></A>
This program runs a query on MarkLogic Server that returns the string <code>
&quot;Hello World&quot;</code>
. The following is a sample command to run the <code>
HelloWorld</code>
 class:</Body>
<Code>
<A ID="pgfId-1057469"></A>
java -classpath &quot;c:/xcc/marklogic-xcc-4.2.0.jar;
&#160;&#160;&#160;&#160;&#160;c:/xcc/xccexamples.jar&quot;
&#160;&#160;&#160;&#160;&#160;com.marklogic.xcc.examples.HelloWorld 
&#160;&#160;&#160;&#160;&#160;xcc://username:password@localhost:8021</Code>
<Heading-3>
<A ID="pgfId-1057055"></A>
<A ID="71721"></A>
ModuleRunner</Heading-3>
<Body>
<A ID="pgfId-1057249"></A>
This program allows you to invoke a module on the server. The module must exist under the XDBC server root, either in the database (when a modules database is configured) or on the filesystem (when the filesystem is configured for modules). The following is a sample command to run the <code>
ModuleRunner</code>
 class:</Body>
<Code>
<A ID="pgfId-1057250"></A>
java -classpath &quot;c:/xcc/marklogic-xcc-4.2.0.jar;
&#160;&#160;&#160;&#160;&#160;c:/xcc/xccexamples.jar&quot;
&#160;&#160;&#160;&#160;&#160;com.marklogic.xcc.examples.ModuleRunner 
&#160;&#160;&#160;&#160;&#160;xcc://username:password@localhost:8021 hello.xqy</Code>
<Body>
<A ID="pgfId-1057254"></A>
This invokes the module named <code>
hello.xqy</code>
. The request is submitted to the XDBC Server running on the local machine at port 8021, using the credentials <code>
username</code>
 and <code>
password</code>
 to authenticate the connection. The module path is resolved relative to the XDBC Server root.</Body>
<Heading-3>
<A ID="pgfId-1057073"></A>
<A ID="50934"></A>
SimpleQueryRunner</Heading-3>
<Body>
<A ID="pgfId-1057074"></A>
This program allows you to store XQuery in a file and then submit the XQuery to MarkLogic Server. The following is a sample command to run the <code>
SimpleQueryRunner</code>
 class:</Body>
<Code>
<A ID="pgfId-1057207"></A>
java -classpath &quot;c:/xcc/marklogic-xcc-4.2.0.jar;
&#160;&#160;&#160;&#160;&#160;c:/xcc/xccexamples.jar&quot;
&#160;&#160;&#160;&#160;&#160;com.marklogic.xcc.examples.SimpleQueryRunner 
&#160;&#160;&#160;&#160;&#160;xcc://username:password@localhost:8021 hello.xqy</Code>
<Body>
<A ID="pgfId-1057228"></A>
This submits the contents of the <code>
hello.xqy</code>
 file to a MarkLogic Server XDBC Server running on the local machine at port 8021, using the credentials <code>
username</code>
 and <code>
password</code>
 to authenticate the connection.</Body>
</XML>
